<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java变量名和包名命名规范</title>
      <link href="/post/6882356e.html"/>
      <url>/post/6882356e.html</url>
      
        <content type="html"><![CDATA[<h2 id="java-总体命名规范"><a href="#java-总体命名规范" class="headerlink" title="java 总体命名规范"></a>java 总体命名规范</h2><ul><li>项目名全部要小写</li><li>包名全部小写</li><li>类名首字母大写，其余组成词首字母大写（即驼峰命名）</li><li>变量名，方法名首字母小写，如果名称由多个单词组成，除了首字母外的每个单词的首字母都大写</li><li>常量名全部大写</li><li>所有的命名规则必须按照以下规则：</li><li>名称只能由字母、数字、下划线、$符号组成.</li><li>不能以数字开头.</li><li>名称不能使用Java中的关键字.</li><li>坚决不允许出现中文及拼音命名</li></ul><h2 id="java-包命名规范"><a href="#java-包命名规范" class="headerlink" title="java 包命名规范"></a>java 包命名规范</h2><p>为了保障每个Java Package命名的唯一性，在Java编程规范中要求开发人员在自己定义的包名前加上唯一的前缀。由于互联网上的域名称是不会重复的,所以多数开发人员采用自己公司在互联网上的域名称作为自己程序包的唯一前缀。命名规范有大致一下几种：</p><h3 id="团体"><a href="#团体" class="headerlink" title="团体"></a>团体</h3><ul><li>com：公司项目,copyright由项目发起的公司所有.<br>包名：com.公司名.项目名.模块名.……</li><li>team：团队项目,指由团队发起,并由该团队开发的项目,copyright属于该团队所有.<br>包名：team.团队名.项目名.模块名.……</li></ul><h3 id="个人"><a href="#个人" class="headerlink" title="个人"></a>个人</h3><p>个人的英语单词有individual、personal、private、one-man,进一步对以上四个单词词意进行分析并在保证了唯一性,继而使用每个单词的前4个字母作为前缀,与com也做了区分.</p><ul><li>indi：个体项目,指个人发起,但非自己独自完成的项目,可公开或私有项目,copyright主要属于发起者.<br>包名：indi.发起者名.项目名.模块名.……</li><li>pers：个人项目,指个人发起,独自完成,可分享的项目,copyright主要属于个人.<br>包名：pers.个人名.项目名.模块名.……</li><li>priv：私有项目,指个人发起,独自完成,非公开的私人使用的项目,copyright属于个人.<br>包名：priv.个人名.项目名.模块名.……</li><li>onem：与indi相同，推荐使用indi.</li></ul><p>转自<a href="https://blog.csdn.net/weixin_44793245/article/details/120838917">此文章</a></p>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后端开发基础（一）- 简介</title>
      <link href="/post/z3823524.html"/>
      <url>/post/z3823524.html</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><h3 id="后端开发导航-🌏"><a href="#后端开发导航-🌏" class="headerlink" title="后端开发导航 🌏"></a>后端开发导航 🌏</h3><ol><li><a href="/post/z3823524.html" title="后端开发基础（一）- 简介">后端开发基础（一）- 简介</a></li></ol></div><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关于什么是后端，可见<a href="/post/m514k094.html">前端技术与后端技术之间的区别</a>🤔</p><h2 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h2><ol><li>计算机网络基础知识</li><li>JavaScript，Java，Python，C#等编程语言</li><li>Git 版本控制</li><li>GitHub 等仓库托管服务</li><li>MySQL 等数据库</li><li>API 应用编程接口</li><li>ServerSide，CDN，ClientSide 缓存</li><li>网络安全基础知识</li><li>测试</li><li>CI&#x2F;CD</li><li>深入了解数据库</li><li>软件设计与架构</li><li>设计开发准则</li><li>Docker等容器化或虚拟化平台</li><li>消息代理</li><li>搜索引擎</li><li>规模化建设</li></ol><p>详细可见<a href="https://roadmap.sh/backend">Developer Roadmaps</a></p><script src='/js/series.js'></script>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端技术与后端技术之间的区别</title>
      <link href="/post/m514k094.html"/>
      <url>/post/m514k094.html</url>
      
        <content type="html"><![CDATA[<h2 id="前端和后端是什么"><a href="#前端和后端是什么" class="headerlink" title="前端和后端是什么"></a>前端和后端是什么</h2><blockquote><p><strong>前端</strong>（英语：<strong>front-end</strong>）和<strong>后端</strong>（英语：<strong>back-end</strong>）是描述进程开始和结束的通用词汇。前端作用于采集输入信息，后端进行处理。计算机程序的界面样式，视觉呈现属于前端。</p></blockquote><p>引用自<a href="https://zh.wikipedia.org/wiki/%E5%89%8D%E7%AB%AF%E5%92%8C%E5%90%8E%E7%AB%AF">维基百科</a></p><h2 id="前端的工作原理"><a href="#前端的工作原理" class="headerlink" title="前端的工作原理"></a>前端的工作原理</h2><blockquote><p>前端一词是指用户可以直接与之交互的图形用户界面（GUI），例如导航菜单、设计元素、按钮、图像和图表。采用技术术语，用户看到的带有多个 UI 组件的页面或屏幕称为文档对象模型（DOM）。<br>三种主要的计算机语言会影响用户与前端的交互方式：</p><ul><li>HTML 定义前端结构和不同的 DOM 元素</li><li>层叠样式表（CSS）定义 Web 应用程序的样式，包括布局、字体、颜色和视觉样式</li><li>JavaScript 通过操作 DOM 增加一层动态功能</li></ul><p>JavaScript 可以触发页面上的更改并显示新信息。这意味着前端可以处理基本的用户交互（或请求），例如显示日历或检查用户是否输入有效的电子邮件地址。前端将更复杂的请求传递给后端。</p></blockquote><p>引用自<a href="https://aws.amazon.com/cn/compare/the-difference-between-frontend-and-backend/">AWS</a></p><h2 id="后端的工作原理"><a href="#后端的工作原理" class="headerlink" title="后端的工作原理"></a>后端的工作原理</h2><blockquote><p>应用程序的后端有时称为服务器端，用于管理 Web 应用程序的整体功能。当用户与前端交互时，此交互会以 HTTP 格式向后端发送请求。后端处理请求并返回响应。</p><p>后端处理请求时，它通常会与以下组件进行交互：</p><ul><li>用于检索或修改相关数据的数据库服务器</li><li>执行用户所请求任务子集的微服务</li><li>用于收集额外信息或执行其他功能的第三方 API</li></ul><p>后端使用多种通信协议和技术来完成请求。此外，后端还能同时处理数千个不同的请求。后端结合并发和并行技术，例如在多个服务器上分配请求、缓存和数据复制。</p></blockquote><p><img src="https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2020/08/12/happy-path8.png"></p><p>引用自<a href="https://aws.amazon.com/cn/compare/the-difference-between-frontend-and-backend/">AWS</a></p><h2 id="前后端区别摘要"><a href="#前后端区别摘要" class="headerlink" title="前后端区别摘要"></a>前后端区别摘要</h2><table><thead><tr><th></th><th>前端</th><th>后端</th></tr></thead><tbody><tr><td>技术</td><td>前端使用 HTML、CSS、JavaScript 和前端框架。</td><td>后端使用 Java、Python、Ruby、API 和数据库管理系统等编程语言。</td></tr><tr><td>并发</td><td>每位用户都有自己的应用程序副本，因此前端不必处理并发问题。</td><td>后端使用多种策略同时处理成千上万的用户请求。</td></tr><tr><td>缓存</td><td>浏览器或客户端应用程序缓存应用程序中的文件并使用它们来提高性能。</td><td>后端系统在不同的服务器或 CDN 中缓存文件。</td></tr><tr><td>安全性</td><td>主要由用户负责前端开发中的安全性。前端开发人员主要关注用户输入验证和用户身份验证工作流程。</td><td>后端开发中的安全性更加全面，可以保护数据库、后端服务和应用程序本身。使用加密、安全身份验证系统和安全编码实践实现此安全性。</td></tr><tr><td>开发目标</td><td>前端开发侧重于创建功能齐全、响应迅速且设计良好的用户界面。</td><td>后端开发涉及创建支持前端开发的可靠架构。</td></tr><tr><td>开发技能</td><td>前端开发人员知悉 HTML、CSS 和 JavaScript。他们可以使用前端框架并创建具有视觉吸引力的页面。他们解决用户在与应用程序交互时面临的痛点。</td><td>后端开发人员具有编码和数据库管理技能。他们还了解代码安全性以及如何使用应用程序开发工具、平台和框架。</td></tr></tbody></table><h2 id="前后端主要区别"><a href="#前后端主要区别" class="headerlink" title="前后端主要区别"></a>前后端主要区别</h2><p>前端和后端是宽泛的术语，在逻辑上对任何应用程序的不同技术和软件层进行分组。前端侧重于用户可以看到的方面。相反，后端是使应用程序正常运行的一切方面。</p><p>可以将前端视为汽车的外部，将后端视为汽车内部的所有机械。只有内部机械正常运作，设计精良的汽车才能以最佳状态运行。但是，外观设计的某些方面也有助于提高汽车速度和性能。同样，应用程序的前端和后端必须经过紧密的设计才能获得最佳结果。</p><p>接下来，我们讨论前端和后端之间的其他关键区别。</p><p><img src="https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2022/06/15/Microservices-backend-with-the-micro-frontends.jpg"></p><h3 id="开发目标"><a href="#开发目标" class="headerlink" title="开发目标"></a>开发目标</h3><p>全栈开发旨在创建响应迅速、高效和功能齐备的应用程序。前端和后端开发人员在创建最终应用程序方面有不同的目标。</p><p>前端开发人员的目标是开发积极的用户体验，优化应用程序的可访问性和性能，以及创建响应式设计。他们的主要开发目标是确保前端易于交互、设计精良且在不同的平台和设备上完全响应。</p><p>后端开发人员构建并维护应用程序的服务器端操作。他们的主要开发目标是创建可靠的架构，以准确、高效地执行应用程序功能。它们旨在满足用户需求，同时符合所有安全和成本考虑事项。</p><h3 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h3><p>前端开发涉及网站面向用户的方面。这些技术包括 JavaScript、CSS 和 HTML 等计算机语言。前端软件开发还使用前端框架来提高生产效率。</p><p>后端开发使用 Ruby、Java 和 Python 等编程语言来编写服务器端逻辑。后端开发人员还使用数据库、存储技术和 API 技术，以便应用程序和系统相互通信。</p><h3 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h3><p>并发是指应用程序能够同时运行多个任务。在前端，每位用户在其浏览器或移动应用程序中有着自己的应用程序副本。这意味着前端开发不存在并发问题。</p><p>另一方面，后端可能必须同时处理数千个请求。后端开发人员使用多种策略：</p><ul><li>多线程，用于管理任务的 CPU 处理</li><li>异步编程，例如回调和承诺</li><li>事件驱动的编程，其中后端侦听多个事件并同时运行相应的事件处理程序</li><li>锁定和同步技术，可让多个用户同时访问同一个资源，而不会出现不一致情况</li></ul><p>在分布式计算方法中，开发人员可以将后端任务分配给多个节点，以便后端同时管理数据密集型工作负载。</p><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><p>缓存会临时存储应用程序文件的副本，这样下次需要时可以更轻松地检索它们。可以使用缓存来缩短应用程序的加载时间和提高性能。</p><p>在前端，浏览器或客户端应用程序会在用户首次访问时缓存标头图像等数据。下次他们访问相同的内容时，前端会加载缓存的文件以提高性能。</p><p>后端开发使用缓存来减少应用程序服务器上的负载。在后端缓存中存储的内容取决于应用程序本身。缓存的内容包括静态页面、数据库查询结果、API 响应、会话数据、图像和视频。</p><p>一种策略是将文件存储在内容分发网络（CDN）上，该网络充当前端和后端之间的中介。每当用户在前端发出请求时，CDN 都会检查数据是否可用并直接响应。</p><h3 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h3><p>前端安全侧重于面向用户的组件。其中包括输入表单、客户端脚本以及身份验证等安全工作流程中的用户体验。</p><p>常见的前端开发安全策略包括输入验证、禁用允许用户在文本框中输入代码的设置以及多重身份验证工作流程。用户负责多个前端安全方面，例如保护其密码或设备安全。</p><p>后端安全侧重于存储和传输中的数据安全。后端管理身份验证、访问控制和会话安全的各个方面。它涵盖了所有后端服务，包括连接的数据库、API 和服务器端编程语言。</p><p>核心后端安全实践包括安全编码、在传输前后加密敏感数据以及安全授权和身份验证系统。</p><h3 id="开发人员技能"><a href="#开发人员技能" class="headerlink" title="开发人员技能"></a>开发人员技能</h3><p>前端开发人员了解客户体验并满足用户需求。他们的主要技能包括熟练掌握 JavaScript、CSS 和 HTML，以及在创建具有视觉吸引力的用户流程方面的设计知识。前端开发人员还掌握多个前端框架，并知道如何进行性能优化。</p><p>后端开发人员对应用程序功能进行编码，使应用程序更安全、没有错误切更加快速。后端开发人员精通多种编程语言，如 Python、Ruby、Java 和 PHP。他们了解像 Django、Ruby on Rails 和 Laravel 这样集成前端和后端的应用程序开发框架。后端开发人员还知悉如何管理和设计关系与非关系数据库。</p><p>全栈开发人员拥有前端和后端开发方面的技能。</p>]]></content>
      
      
      <categories>
          
          <category> 后端开发 </category>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端开发 </tag>
            
            <tag> 后端开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端开发基础（三）- css</title>
      <link href="/post/xy8v73x3.html"/>
      <url>/post/xy8v73x3.html</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><h3 id="前端开发导航-🌏"><a href="#前端开发导航-🌏" class="headerlink" title="前端开发导航 🌏"></a>前端开发导航 🌏</h3><ol><li><a href="/post/x766a8l8.html" title="前端开发基础（一）- 学习路线">前端开发基础（一）- 学习路线</a></li><li><a href="/post/w2d41vf2.html" title="前端开发基础（二）- html">前端开发基础（二）- html</a></li><li><a href="/post/xy8v73x3.html" title="前端开发基础（三）- css">前端开发基础（三）- css</a></li></ol></div><h2 id="CSS-简介"><a href="#CSS-简介" class="headerlink" title="CSS 简介"></a>CSS 简介</h2><p>CSS 代表层叠样式表（Cascading Style Sheets），是一种用来为结构化文档（如 HTML 文档或 XML 应用）添加样式（字体、间距和颜色等）的计算机语言。</p><h2 id="CSS-基本结构"><a href="#CSS-基本结构" class="headerlink" title="CSS 基本结构"></a>CSS 基本结构</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">selector &#123;</span><br><span class="line">  property: value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>selector：选择器，用于指定要应用样式的 HTML 元素</li><li>property：属性，定义要设置的样式类型</li><li>value：属性值，指定该属性要应用的具体样式</li></ul><h2 id="CSS-的插入方式"><a href="#CSS-的插入方式" class="headerlink" title="CSS 的插入方式"></a>CSS 的插入方式</h2><ol><li>内联样式：直接在 HTML 元素的 style 属性中编写样式</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color: blue;&quot;</span>&gt;</span>Hello,World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>内部样式表：将样式写在 HTML 文档的<code>&lt;style&gt;</code>标签中，通常放在<code>&lt;head&gt;</code>部分中</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>外部样式表：将 CSS 代码写在单独的<code>.css</code>文件中，通过<code>&lt;link&gt;</code>标签引入到 HTML 中</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="推荐的-CSS-学习资源"><a href="#推荐的-CSS-学习资源" class="headerlink" title="推荐的 CSS 学习资源"></a>推荐的 CSS 学习资源</h2><p>课程推荐：</p><p><a href="https://www.w3schools.com/css/default.asp">W3Schools:🛫</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS">MDN Web Docs:🛫</a></p><p>项目实践：<br><a href="https://www.freecodecamp.org/learn/">FreeCodeCamp:🛫</a></p><p>❗❗❗ 学习重点 🤔：</p><ol><li><p><strong>选择器（Selectors）</strong></p><ul><li><strong>基础选择器</strong>：元素选择器（如<code>div</code>）、类选择器（如<code>.class</code>）、ID 选择器（如<code>#id</code>）。</li><li><strong>组合选择器</strong>：后代选择器、子选择器、并集选择器等。</li><li><strong>伪类和伪元素</strong>：如<code>:hover</code>、<code>:nth-child</code>、<code>::before</code>、<code>::after</code>。</li></ul><p><strong>重点</strong>：理解选择器的优先级和如何有效使用组合选择器来控制样式。</p></li><li><p><strong>盒模型（Box Model）</strong></p><ul><li><strong>内容区域（content）</strong>：显示文本和图片等内容。</li><li><strong>内边距（padding）</strong>：内容与边框之间的空间。</li><li><strong>边框（border）</strong>：围绕内容和内边距的边框。</li><li><strong>外边距（margin）</strong>：元素与其他元素之间的距离。</li></ul><p><strong>重点</strong>：学习如何计算元素的实际尺寸以及如何使用<code>box-sizing</code>属性来控制盒模型。</p></li><li><p><strong>布局（Layout）</strong></p><ul><li><strong>传统布局</strong>：浮动（<code>float</code>）、清除浮动（<code>clear</code>）、<code>position</code>属性。</li><li><strong>现代布局</strong>：<ul><li><strong>Flexbox</strong>：弹性布局，适用于一维布局。</li><li><strong>Grid</strong>：网格布局，适用于二维布局。</li></ul></li></ul><p><strong>重点</strong>：掌握 Flexbox 和 Grid 布局，能够创建复杂、响应式的布局结构。</p></li><li><p><strong>响应式设计与媒体查询（Responsive Design &amp; Media Queries）</strong></p><ul><li><strong>媒体查询</strong>：<code>@media screen and (max-width: 768px)</code>等语法。</li><li><strong>弹性单位</strong>：<code>em</code>、<code>rem</code>、<code>vw</code>、<code>vh</code>等相对单位，能够帮助实现响应式设计。</li></ul><p><strong>重点</strong>：了解如何使用媒体查询和弹性单位实现适配不同屏幕尺寸的布局。</p></li><li><p><strong>CSS 层叠与继承（Cascading &amp; Inheritance）</strong></p><ul><li><strong>层叠</strong>：当多个规则作用于同一元素时，理解优先级规则，主要包括样式的来源（外部、内部或内联）、重要性（<code>!important</code>）、选择器的特定性（Specificity）等。</li><li><strong>继承</strong>：某些样式可以从父元素继承到子元素，如字体和颜色等。</li></ul><p><strong>重点</strong>：学习优先级计算规则，以及如何合理地使用<code>!important</code>避免冲突。</p></li><li><p><strong>动画与过渡（Animations &amp; Transitions）</strong></p><ul><li><strong>过渡</strong>：<code>transition</code>属性用于在元素状态变化时产生平滑的过渡效果。</li><li><strong>动画</strong>：<code>@keyframes</code>和<code>animation</code>属性用于创建复杂的动画效果。</li></ul><p><strong>重点</strong>：学习如何控制动画的关键帧、持续时间、延迟等参数，创建交互效果。</p></li><li><p><strong>常用 CSS 属性</strong></p><ul><li><strong>文本样式</strong>：<code>font-family</code>、<code>font-size</code>、<code>color</code>、<code>text-align</code>等。</li><li><strong>背景与边框</strong>：<code>background-color</code>、<code>background-image</code>、<code>border-radius</code>等。</li><li><strong>显示与可见性</strong>：<code>display</code>、<code>visibility</code>、<code>opacity</code>、<code>z-index</code>等。</li></ul><p><strong>重点</strong>：熟练掌握常用属性，尤其是<code>display</code>中的<code>block</code>、<code>inline</code>、<code>flex</code>、<code>grid</code>等。</p></li></ol><script src='/js/series.js'></script>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 前端开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端开发基础（二）- html</title>
      <link href="/post/w2d41vf2.html"/>
      <url>/post/w2d41vf2.html</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><h3 id="前端开发导航-🌏"><a href="#前端开发导航-🌏" class="headerlink" title="前端开发导航 🌏"></a>前端开发导航 🌏</h3><ol><li><a href="/post/x766a8l8.html" title="前端开发基础（一）- 学习路线">前端开发基础（一）- 学习路线</a></li><li><a href="/post/w2d41vf2.html" title="前端开发基础（二）- html">前端开发基础（二）- html</a></li><li><a href="/post/xy8v73x3.html" title="前端开发基础（三）- css">前端开发基础（三）- css</a></li></ol></div><h2 id="HTML-简介"><a href="#HTML-简介" class="headerlink" title="HTML 简介"></a>HTML 简介</h2><p>HTML 代表超文本标记语言（Hyper Text Markup Language），是用于创建网页的标准标记语言。它描述了网页的结构，定义了各种元素及其内容。HTML 使用标签（tags）来标记网页内容，每个标签通常由尖括号包围，例如<code>&lt;tags&gt;</code>。</p><h2 id="HTML-基础结构"><a href="#HTML-基础结构" class="headerlink" title="HTML 基础结构"></a>HTML 基础结构</h2><p>一个简单的 HTML 文件通常包含以下基本结构：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>示例网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎来到我的网页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;!DOCTYPE html&gt;</code>: 声明文档类型为 HTML5。</li><li><code>&lt;html&gt;</code>: HTML 文档的根元素。</li><li><code>&lt;head&gt;</code>: 包含有关文档的信息（例如标题和元数据）。</li><li><code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code>: 定义文档的字符编码。</li><li><code>&lt;title&gt;</code>: 网页标题，在浏览器标签中显示。</li><li><code>&lt;body&gt;</code>: 包含网页的可见内容。</li></ul><h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><h3 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h3><p>标题标签用于定义不同级别的标题，从 <code>&lt;h1&gt;</code>（最高级别）到 <code>&lt;h6&gt;</code>（最低级别）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h3><p>段落标签用于定义文本段落。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h3><p>链接标签用于创建超链接。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.example.com&quot;</span>&gt;</span>点击这里访问示例网站<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h3><p>图像标签用于在网页上插入图片。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><p>有序列表和无序列表用于组织项目列表。</p><p>无序列表：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>项目一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>项目二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有序列表：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><p>表格标签用于创建表格。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>28<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>32<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h3><p>表单标签用于创建用户输入表单。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/submit&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>姓名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="推荐的-HTML-学习资源"><a href="#推荐的-HTML-学习资源" class="headerlink" title="推荐的 HTML 学习资源"></a>推荐的 HTML 学习资源</h2><p>课程推荐：</p><p><a href="https://www.w3schools.com/html/default.asp">W3Schools:🛫</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML">MDN Web Docs:🛫</a></p><p>项目实践：<br><a href="https://www.freecodecamp.org/learn/">FreeCodeCamp:🛫</a></p><p>❗❗❗学习重点🤔：</p><ol><li><p>理解 HTML 文档结构</p><ul><li><strong>DOCTYPE 声明</strong>: 确保你的 HTML 文件以 <code>&lt;!DOCTYPE html&gt;</code> 开头，这表明该文档是 HTML5 标准。</li><li><strong>HTML 文档的基本结构</strong>: 理解 <code>&lt;html&gt;</code>, <code>&lt;head&gt;</code>, 和 <code>&lt;body&gt;</code> 标签的作用和用途。</li></ul></li><li><p>学习常用标签</p><ul><li><strong>标题标签 (<code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code>)</strong>: 用于定义标题的层次结构。</li><li><strong>段落标签 (<code>&lt;p&gt;</code>)</strong>: 用于定义段落。</li><li><strong>链接标签 (<code>&lt;a&gt;</code>)</strong>: 用于创建超链接，理解 <code>href</code> 属性的使用。</li><li><strong>图像标签 (<code>&lt;img&gt;</code>)</strong>: 用于插入图片，理解 <code>src</code> 和 <code>alt</code> 属性的使用。</li><li><strong>列表标签 (<code>&lt;ul&gt;</code>, <code>&lt;ol&gt;</code>, <code>&lt;li&gt;</code>)</strong>: 用于创建有序和无序列表。</li><li><strong>表格标签 (<code>&lt;table&gt;</code>, <code>&lt;tr&gt;</code>, <code>&lt;th&gt;</code>, <code>&lt;td&gt;</code>)</strong>: 用于创建表格。</li><li><strong>表单标签 (<code>&lt;form&gt;</code>, <code>&lt;input&gt;</code>, <code>&lt;label&gt;</code>, <code>&lt;textarea&gt;</code>, <code>&lt;button&gt;</code>)</strong>: 用于创建用户输入表单。</li></ul></li><li><p>理解 HTML 属性</p><ul><li>学习常见标签的属性，如 <code>href</code>, <code>src</code>, <code>alt</code>, <code>id</code>, <code>class</code>, <code>style</code> 等。</li><li>理解如何使用全局属性（例如 <code>id</code> 和 <code>class</code>）来标识和样式化元素。</li></ul></li><li><p>学习 HTML5 新元素和语义化标签</p><ul><li><strong>语义化标签</strong>: 使用 <code>&lt;header&gt;</code>, <code>&lt;nav&gt;</code>, <code>&lt;article&gt;</code>, <code>&lt;section&gt;</code>, <code>&lt;footer&gt;</code>, <code>&lt;aside&gt;</code> 等标签来增强文档的语义结构。</li><li><strong>媒体元素</strong>: 使用 <code>&lt;audio&gt;</code> 和 <code>&lt;video&gt;</code> 标签嵌入多媒体内容。</li></ul></li><li><p>理解块级元素和内联元素</p><ul><li><strong>块级元素</strong>: 如 <code>&lt;div&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;h1&gt;</code> 等，它们通常占据一整行。</li><li><strong>内联元素</strong>: 如 <code>&lt;span&gt;</code>, <code>&lt;a&gt;</code>, <code>&lt;img&gt;</code> 等，它们不会打断文本流。</li></ul></li><li><p>理解表单及其控件</p><ul><li>学习如何创建和提交表单。</li><li>理解各种表单控件（如文本框、复选框、单选按钮、下拉菜单）的使用。</li></ul></li><li><p>学习如何使用注释</p><ul><li>使用注释（<code>&lt;!-- 注释内容 --&gt;</code>）来解释代码，便于维护和阅读。</li></ul></li><li><p>学习网页的基本布局</p><ul><li>理解如何使用 <code>&lt;div&gt;</code> 和 CSS 进行基本的网页布局。</li><li>学习如何使用网格布局（Grid Layout）和弹性盒布局（Flexbox）来创建响应式设计。</li></ul></li><li><p>理解 HTML 实体</p><ul><li>学习使用 HTML 实体（如 <code>&amp;amp;</code>, <code>&amp;lt;</code>, <code>&amp;gt;</code>）来表示特殊字符。</li></ul></li></ol><script src='/js/series.js'></script>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端开发 </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端开发基础（一）- 学习路线</title>
      <link href="/post/x766a8l8.html"/>
      <url>/post/x766a8l8.html</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><h3 id="前端开发导航-🌏"><a href="#前端开发导航-🌏" class="headerlink" title="前端开发导航 🌏"></a>前端开发导航 🌏</h3><ol><li><a href="/post/x766a8l8.html" title="前端开发基础（一）- 学习路线">前端开发基础（一）- 学习路线</a></li><li><a href="/post/w2d41vf2.html" title="前端开发基础（二）- html">前端开发基础（二）- html</a></li><li><a href="/post/xy8v73x3.html" title="前端开发基础（三）- css">前端开发基础（三）- css</a></li></ol></div><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关于什么是前端，可见<a href="/post/m514k094.html">前端技术与后端技术之间的区别</a>🤔</p><h2 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h2><ol><li>计算机网络基础知识</li><li>HTML 基础知识</li><li>CSS 基础知识</li><li>JavaScript 基础知识</li><li>Git 版本控制</li><li>GitHub 等仓库托管服务</li><li>npm 等包管理器</li><li>React，Vue.js 等前端框架</li><li>网络安全基础知识</li><li>TypeScript类型检查器</li><li>SSR服务端渲染</li><li>SSG静态网站生成器</li></ol><p>详细可见<a href="https://roadmap.sh/frontend">Developer Roadmaps</a></p><script src='/js/series.js'></script>]]></content>
      
      
      <categories>
          
          <category> 前端开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>泡面食谱</title>
      <link href="/post/57cd07p1.html"/>
      <url>/post/57cd07p1.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>❗❗❗ 最近发现的几个超神的泡面吃法 😋😋😋<br>总结自以下视频 🤔</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?isOutside=true&aid=788582992&bvid=BV1XC4y1f7sT&cid=1268585687&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div><h2 id="1-泡面蒸蛋"><a href="#1-泡面蒸蛋" class="headerlink" title="1.泡面蒸蛋"></a>1.泡面蒸蛋</h2><mark class="hl-label green">原料：</mark> <ul><li>泡面 <mark class="hl-label orange">推荐：</mark> 清汤类泡面</li><li>鸡蛋两个</li></ul><mark class="hl-label purple">过程：</mark> <ol><li>正常泡面吃完后留下汤</li><li>往汤中加入两颗鸡蛋打散</li><li>根据微波炉情况，叮三到四分钟</li></ol><mark class="hl-label red">注：</mark> 注意钠的摄入量<h2 id="2-芝士土豆泥泡面"><a href="#2-芝士土豆泥泡面" class="headerlink" title="2.芝士土豆泥泡面"></a>2.芝士土豆泥泡面</h2><mark class="hl-label green">原料：</mark> <ul><li>泡面 <mark class="hl-label orange">推荐：</mark> 辣味拌面</li><li>土豆泥粉</li><li>马苏里拉芝士</li></ul><mark class="hl-label purple">过程：</mark> <ol><li>土豆泥粉和两到三倍量的芝士混合</li><li>根据微波炉情况，叮一到两分钟</li><li>拿出搅拌后倒入泡面中</li></ol><mark class="hl-label red">注：</mark> 可解辣<h2 id="3-番茄煎蛋泡面"><a href="#3-番茄煎蛋泡面" class="headerlink" title="3.番茄煎蛋泡面"></a>3.番茄煎蛋泡面</h2><mark class="hl-label green">原料：</mark> <ul><li>泡面 <mark class="hl-label orange">推荐：</mark> 红烧味和番茄味</li><li>番茄一个</li><li>鸡蛋两个</li></ul><mark class="hl-label purple">过程：</mark> <ol><li>番茄切丁</li><li>加油煎两颗鸡蛋</li><li>煎到半熟时捞出其中一颗作为溏心蛋，剩下一颗煎熟</li><li>煎熟后将鸡蛋撕开，加入番茄，炒出汁水</li><li>出汁后加水，烧开后放面和调料包</li><li>面煮熟后出锅放入溏心蛋</li></ol><h2 id="4-上汤泡面"><a href="#4-上汤泡面" class="headerlink" title="4.上汤泡面"></a>4.上汤泡面</h2><mark class="hl-label green">原料：</mark> <ul><li>泡面 <mark class="hl-label orange">推荐：</mark> 浓汤类泡面</li><li>咸蛋一个</li><li>皮蛋一个</li></ul><mark class="hl-label purple">过程：</mark> <ol><li>咸蛋只取蛋黄，皮蛋切成小块一同放入锅中</li><li>加油炒至咸蛋反沙起泡，加水煮开后放面和调料包</li></ol><mark class="hl-label red">注：</mark> 注意钠的摄入量<h2 id="5-蘑菇泡面"><a href="#5-蘑菇泡面" class="headerlink" title="5.蘑菇泡面"></a>5.蘑菇泡面</h2><mark class="hl-label green">原料：</mark> <ul><li>泡面 <mark class="hl-label orange">推荐：</mark> 清汤类泡面</li><li>肉沫</li><li>口蘑几个</li></ul><mark class="hl-label purple">过程：</mark> <ol><li>加油炒熟肉沫后捞出</li><li>不加油碗口朝上放入口蘑，慢烤至口蘑出汁后加水</li><li>将口蘑剪成小块</li><li>待水煮开后放面，调料包和肉沫</li></ol><h2 id="6-紫菜泡面"><a href="#6-紫菜泡面" class="headerlink" title="6.紫菜泡面"></a>6.紫菜泡面</h2><mark class="hl-label green">原料：</mark> <ul><li>泡面 <mark class="hl-label orange">推荐：</mark> 清汤类泡面</li><li>虾皮</li><li>紫菜</li><li>肉丸</li></ul><mark class="hl-label purple">过程：</mark> <ol><li>不加油抄虾皮和紫菜，炒至虾皮发黄紫菜泛绿后加水</li><li>加肉丸后煮五分钟</li><li>加面和调料包</li></ol><mark class="hl-label red">注：</mark> 增鲜用<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>泡面也能吃出花来 😋</p>]]></content>
      
      
      <categories>
          
          <category> 食谱 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 食谱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于按值调用和按引用调用</title>
      <link href="/post/681w71ia.html"/>
      <url>/post/681w71ia.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在计算机科学中有一个术语<code>按···调用（call by）</code>用来表示各种编程语言中方法参数的行为。<br>常见的调用方式有以下两种：</p><ul><li>按值调用（call by value）</li><li>按引用调用（call by reference）</li></ul><h2 id="按值调用"><a href="#按值调用" class="headerlink" title="按值调用"></a>按值调用</h2><p>按值调用表示方法接受的是调用者提供的值，对于这种调用方式方法得到是所用参数值的一份<mark class="hl-label red">副本</mark> ，以下是两种编程语言的实现：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> test&#123;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="type">int</span> temp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    test::<span class="built_in">swap</span>(a, b);</span><br><span class="line">    std::cout &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>10 20</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>(<span class="number">10</span>);</span><br><span class="line">        <span class="type">A</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>(<span class="number">20</span>);</span><br><span class="line">        swap(a, b);</span><br><span class="line">        System.out.println(a.getValue());</span><br><span class="line">        System.out.println(b.getValue());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(A a, A b)</span>&#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">temp</span> <span class="operator">=</span> a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>10<br>20</p></blockquote><h2 id="按引用调用"><a href="#按引用调用" class="headerlink" title="按引用调用"></a>按引用调用</h2><p>按引用调用表示方法接受的是调用者提供的变量的位置（location），对于这种调用方式方法可以直接修改所用的参数的值，在c++中可以实现这种操作，但Java中并不可以，Java中的方法调用总是按值调用。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> test&#123;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> &amp;a, <span class="type">int</span> &amp;b)</span></span>&#123;</span><br><span class="line">        <span class="type">int</span> temp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">    test::<span class="built_in">swap</span>(a, b);</span><br><span class="line">    std::cout &lt;&lt; a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>20 10</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BigDecimal</title>
      <link href="/post/9m407u54.html"/>
      <url>/post/9m407u54.html</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Java</code>中提供了对于大实数运算的相关类<code>BigDecimal</code>，对于那些无法用二进制数精确运算的数可以使用<code>BigDecimal</code>来进行精确运算，<code>BigDecimal</code>的底层存储的是一个 byte 数组，对应<code>String</code>中的每一位，比如：<br>-132.131432<br>⬇<br>[45, 49, 51, 50, 46, 49, 51, 49, 52, 51, 50]<br>⬇<br>[‘-‘, ‘1’, ‘3’, ‘2’, ‘.’, ‘1’, ‘3’, ‘1’, ‘4’, ‘3’, ‘2’]</p><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><table><thead><tr><th>方法名称</th><th>说明</th></tr></thead><tbody><tr><td>BigDecimal(String val)</td><td>用字符串构造一个大实数</td></tr><tr><td>static BigDecimal valueOf(double val)</td><td>返回数值为 val 的大实数，对于 double 范围内数字推荐用此方法，底层有优化</td></tr><tr><td>BigDecimal add(BigDecimal val)</td><td>返回大实数之和</td></tr><tr><td>BigDecimal subtract(BigDecimal val)</td><td>返回大实数之差</td></tr><tr><td>BigDecimal multiply(BigDecimal val)</td><td>返回大实数之积</td></tr><tr><td>BigDecimal divide(BigDecimal val)</td><td>返回大实数之商，商为无限小数会报错</td></tr><tr><td>BigDecimal divide(BigDcimal val,int scale,RoundingMode roundingMode)</td><td>返回大实数之商，保留小数点后几位，并按指定舍入模式舍入</td></tr><tr><td>int compareTo(BigDecimal val)</td><td>如果相等返回 0，大于返回正数，小于返回负数</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> BigDecimal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BigInteger</title>
      <link href="/post/c0460286.html"/>
      <url>/post/c0460286.html</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Java</code>中提供了对于大整数运算的相关类<code>BigInteger</code>，<code>BigInteger</code>的底层会将符号位和绝对值分别存储，绝对值会被分割为几份长度为 32 位的二进制值并存到一个 int 数组当中，比如：<br>27670116110564327424<br>⬇<br>[1, 10000000000000000000000000000000, 00000000000000000000000000000000]<br>⬇<br>[1, -2147483648, 0]</p><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><table><thead><tr><th>方法名称</th><th>说明</th></tr></thead><tbody><tr><td>BigInteger(int num,Random rnd)</td><td>获取随机大整数，取值范围$[0,2^{num}-1]$</td></tr><tr><td>BigInteger(String val)</td><td>用字符串构造一个大整数</td></tr><tr><td>BigIntege(String val,int radix)</td><td>用字符串构造指定进制的大整数</td></tr><tr><td>static BigInteger valueOf(long val)</td><td>返回数值为 val 的大整数，对于 long 范围内数字推荐用此方法，是因为当生成的 val 在$[-16,16]$会有优化</td></tr><tr><td>BigInteger add(BigInteger val)</td><td>返回大整数之和</td></tr><tr><td>BigInteger subtract(BigInteger val)</td><td>返回大整数之差</td></tr><tr><td>BigInteger multiply(BigInteger val)</td><td>返回大整数之积</td></tr><tr><td>BigInteger divide(BigInteger val)</td><td>返回大整数之商</td></tr><tr><td>BigInteger mod(BigInteger val)</td><td>返回大整数之余</td></tr><tr><td>BigInteger[] divideAndRemainder(BigInteger val)</td><td>获取商和余数</td></tr><tr><td>BigInteger sqrt()</td><td>返回大整数的平方根</td></tr><tr><td>BigInteger pow(int exponent)</td><td>获取大整数的次幂</td></tr><tr><td>BigInteger max&#x2F;min(BigInteger val)</td><td>返回最大&#x2F;最小值</td></tr><tr><td>int compareTo(BigInteger val)</td><td>如果相等返回 0，大于返回正数，小于返回负数</td></tr><tr><td>boolean equals(Object x)</td><td>比较是否相同</td></tr><tr><td>int intValue(BigInteger val)</td><td>转为 int 类型，超出范围数据有误</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> BigInteger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集合</title>
      <link href="/post/j9ujeumh.html"/>
      <url>/post/j9ujeumh.html</url>
      
        <content type="html"><![CDATA[<h2 id="集合的分类"><a href="#集合的分类" class="headerlink" title="集合的分类"></a>集合的分类</h2><p>集合可以分类为以下两大种：</p><ul><li><strong>单列集合</strong></li><li><strong>双列集合</strong></li></ul><p>Java 中的集合框架的继承和实现体系大致如下：</p><ul><li><mark class="hl-label red">Collection</mark> <ul><li><mark class="hl-label red">List</mark> <ul><li><mark class="hl-label blue">ArrayList</mark> </li><li><mark class="hl-label blue">LinkedList</mark> </li><li><mark class="hl-label blue">Vector</mark> </li></ul></li><li><mark class="hl-label red">Set</mark> <ul><li><mark class="hl-label blue">HashSet</mark> <ul><li><mark class="hl-label blue">LinkedHashSet</mark> </li></ul></li><li><mark class="hl-label blue">TreeSet</mark> </li></ul></li></ul></li><li><mark class="hl-label red">Map</mark> <ul><li><mark class="hl-label blue">HashMap</mark> <ul><li><mark class="hl-label blue">LinkedHashMap</mark> </li></ul></li><li><mark class="hl-label blue">Hashtable</mark> <ul><li><mark class="hl-label blue">Properties</mark> </li></ul></li><li><mark class="hl-label blue">TreeMap</mark> </li></ul></li></ul><mark class="hl-label red">红色标签</mark>  为接口（Interface），<mark class="hl-label blue">蓝色标签</mark>  为实现类（Implementation）<p>以上结构仅展示一些经常会用到的实现类和接口，并不是完整的结构，下图才是完整的结构：<br><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Java.util.Collection_hierarchy.svg/1920px-Java.util.Collection_hierarchy.svg.png"><br><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Java.util.Map_hierarchy.svg/2560px-Java.util.Map_hierarchy.svg.png"><br>引用自<a href="https://en.wikipedia.org/wiki/Java_collections_framework">Wikipedia 的 Java collections framework</a></p><h2 id="Collection（单列集合）"><a href="#Collection（单列集合）" class="headerlink" title="Collection（单列集合）"></a>Collection（单列集合）</h2><p>Collection 是单列集合的顶层接口，以下为常用方法：</p><table><thead><tr><th>方法名称</th><th>说明</th></tr></thead><tbody><tr><td>boolean add(E e)</td><td>把给定的对象添加到当前集合当中</td></tr><tr><td>void clear()</td><td>清空集合中所有元素</td></tr><tr><td>boolean remove(E e)</td><td>把给定的元素在当前集合中删除</td></tr><tr><td>boolean contains(Object o)</td><td>判断当前集合中是否包含给定对象</td></tr><tr><td>boolean isEmpty()</td><td>判断当前集合是否为空</td></tr><tr><td>int size()</td><td>返回集合中的元素个数</td></tr></tbody></table><h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><p>List 集合中的元素有序，可重复，且有索引，因此多了很多索引操作的方法：</p><table><thead><tr><th>方法名称</th><th>说明</th></tr></thead><tbody><tr><td>void add(int index, E element)</td><td>在集合中的指定位置插入给定元素</td></tr><tr><td>E remove(int index)</td><td>删除指定索引处的元素，返回被删除的元素</td></tr><tr><td>E set(int index, E element)</td><td>修改指定索引处的元素，返回被修改的元素</td></tr><tr><td>E get(int index)</td><td>返回指定索引处的元素</td></tr></tbody></table><h4 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h4><p>ArrayList 的底层是一个数组，在扩容时有特殊机制</p><p>ArrayList 底层原理</p><ol><li>利用空参构造创建集合时，在底层会创建一个默认长度为 0 的数组</li><li>当往集合中添加元素时，底层会创建一个新的长度为 10 的数组</li><li>当存满时继续添加元素，会触发集合的扩容，此时有两种情况：<ol><li>添加单个元素或添加的多个元素个数和原来的元素个数之和小于原来长度的 1.5 倍，集合会扩容至原来的 1.5 倍</li><li>添加的元素过多，会直接扩容至原来的元素个数加添加的元素个数</li></ol></li></ol><h4 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h4><p>LinkedList 的底层是靠链表实现的</p><p>LinkedList 特有方法</p><table><thead><tr><th>方法名称</th><th>说明</th></tr></thead><tbody><tr><td>void addFirst(E e)</td><td>在列表的开头插入给定元素</td></tr><tr><td>void addLast(E e)</td><td>在列表的结尾插入给定元素</td></tr><tr><td>E getFirst()</td><td>返回列表开头的元素</td></tr><tr><td>E getLast()</td><td>返回列表结尾的元素</td></tr><tr><td>E removeFirst</td><td>删除列表开头的元素</td></tr><tr><td>E removeLast</td><td>删除列表结尾的元素</td></tr></tbody></table><h3 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h3><p>Set 集合中的元素无序，不重复，且没有索引，和 Collection 的 API 基本一致</p><h4 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h4><p>HashSet 的底层是一个 HashMap，所以使用的数据结构 HashMap 是一样<br>当向 HashSet 添加元素时，实际上是在往 HashMap 添加一个 key &#x3D; 此元素，value &#x3D; 虚拟 Object 对象的键值对<br><code>这个虚拟Object对象没有实际含义，可以看作value为空，只是因为HashMap的底层实现要求value不可为null</code></p><div class="note warning no-icon flat"><p>在使用 HashSet 存储自定义对象时，必须重写 hashCode()和 equals()方法</p></div><h5 id="LinkedHashSet"><a href="#LinkedHashSet" class="headerlink" title="LinkedHashSet"></a>LinkedHashSet</h5><p>LinkedHashSet 与 HashSet 相比较多了可以保证数据的存储和取出的顺序时一样的</p><p>LinkedHashSet 底层是一个 LinkedHashMap，所以底层原理是一样的<br>当向 LinkedHashSet 添加元素时，实际上是在往 LinkedHashMap 添加一个 key &#x3D; 此元素，value &#x3D; 虚拟 Object 对象的键值对</p><h3 id="TreeSet"><a href="#TreeSet" class="headerlink" title="TreeSet"></a>TreeSet</h3><p>TreeSet 是可以排序的，默认按照从小到大的顺序排序</p><p>TreeSet 底层是一个 TreeMap，所以底层原理是一样的，都是基于红黑树来实现的<br>当向 TreeSet 添加元素时，实际上是在往 TreeSet 添加一个 key &#x3D; 此元素，value &#x3D; 虚拟 Object 对象的键值对</p><div class="note warning no-icon flat"><p>TreeSet 中的元素若为自定义对象，需要实现 Comparable 接口或者在构造时传入 Comparator 的实现类对象</p></div><h2 id="Map（双列集合）"><a href="#Map（双列集合）" class="headerlink" title="Map（双列集合）"></a>Map（双列集合）</h2><p>Map 也叫映射，是一种可以将键和值对应起来的结构，</p><p>Map 是双列集合的顶层接口，以下是一些常用的方法：</p><table><thead><tr><th>方法名称</th><th>说明</th></tr></thead><tbody><tr><td>V put(K key, V value)</td><td>添加或覆盖元素，若是添加则返回 null，若是覆盖则返回被覆盖的 value</td></tr><tr><td>V remove(Object key)</td><td>根据键删除键值对元素</td></tr><tr><td>V get(Object key)</td><td>根据键获取值</td></tr><tr><td>V repalce(K key, V value)</td><td>根据键将值替换成新的值，并将旧的值进行返回</td></tr><tr><td>boolean repalce(K key, V oldValue, V newValue)</td><td>根据键值对将值替换成新的值，存在此键值对则替换且返回 true，否则返回 false</td></tr><tr><td>void clear()</td><td>移除所有的键值对元素</td></tr><tr><td>boolean containsKey(Object key)</td><td>判断集合是否包含指定的键</td></tr><tr><td>boolean containsValue(Object value)</td><td>判断集合是否包含指定的值</td></tr><tr><td>boolean isEmpty()</td><td>判断集合是否为空</td></tr><tr><td>int size()</td><td>返回集合的长度，即键值对个数</td></tr><tr><td>Set<K> keySet()</td><td>返回键的 Set 集合</td></tr><tr><td>Set&lt;Map.Entry&lt;K, V&gt;&gt;entrySet()</td><td>返回键值对对象的 Set 集合</td></tr></tbody></table><h3 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h3><p>HashMap 中存储的元素是无序，不重复，且无索引的</p><p>HashMap 映射的底层在 JDK8 前后是不一样的<br>在 JDK8 以前：数组+链表（哈希表）<br>在 JDK8 及其以后：数组+链表+红黑树</p><p>HashMap 底层原理：</p><ol><li>创建一个默认长度 16，默认加载因子为 0.75（Load Factor）的数组，数组名 table<br><code>加载因子是用来控制哈希表扩容时机的，当表中存储的元素大于16*0.75时，哈希表扩充到原来的两倍</code></li><li>根据键值对的键（key）的哈希值跟数组的长度计算出应存入的位置<br><code>index = (table.length - 1) &amp; 键的哈希值，此哈希值是调用键的hashCode()获取的</code></li><li>判断当前位置是否为 null，如果是 null 直接存入</li><li>如果位置不为 null，表示已有元素，则调用 equals 方法比较键的属性值</li><li>一样：不存；不一样：存入数组，形成链表<br>JDK8 以前：新元素存入数组，老元素挂在新元素下面<br>JDK8 以后：新元素直接挂在老元素下面</li><li>当链表的长度大于 8 且数组的长度大于等于 64 时，链表会转换成红黑树</li></ol><div class="note warning no-icon flat"><p>若在使用 HashMap 存储的键是自定义对象时，必须重写 hashCode()和 equals()方法<br>若在使用 HashMap 存储的值是自定义对象时，不需要重写 hashCode()和 equals()方法</p></div><h4 id="LinkedHashMap"><a href="#LinkedHashMap" class="headerlink" title="LinkedHashMap"></a>LinkedHashMap</h4><p>LinkedHashMap 中存储的元素是有序，不重复且无索引的</p><p>LinkedHashMap 与 HashMap 相比，多了可以保证数据的存储和取出的顺序时一样的</p><p>HashMap 的底层在原有 HashMap 的基础上增加了双链表机制，每个添加的元素都记录了上一个添加的元素的地址值和下一个要添加的元素的地址值<br>在遍历时会从第一个添加的元素开始遍历</p><h3 id="Hashtable"><a href="#Hashtable" class="headerlink" title="Hashtable"></a>Hashtable</h3><h4 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h4><h3 id="TreeMap"><a href="#TreeMap" class="headerlink" title="TreeMap"></a>TreeMap</h3><p>TreeMap 中存储的元素是可排序，不重复，且无索引的<br><code>可排序是指能对键进行排序操作</code><br>TreeMap 是可以排序的，默认按照从小到大的顺序排序，底层是基于红黑树来实现的</p><div class="note warning no-icon flat"><p>TreeMap 中的元素的键若为自定义对象，需要实现 Comparable 接口或者在构造时传入 Comparator 的实现类对象<br>TreeMap 中的元素的值若为自定义对象，不需要实现 Comparable 接口或者在构造时传入 Comparator 的实现类对象</p></div><h2 id="集合的遍历"><a href="#集合的遍历" class="headerlink" title="集合的遍历"></a>集合的遍历</h2><p>collection 集合的遍历有以下三种方式：</p><ul><li>迭代器遍历</li><li>增强 for 遍历</li><li>lambda 表达式遍历</li></ul><p>list 集合的遍历有以下五种方式：</p><ul><li>迭代器遍历</li><li>列表迭代器遍历</li><li>增强 for 遍历</li><li>lambda 表达式遍历</li><li>普通 for 循环遍历（依赖索引）</li></ul><p>set 集合的遍历方式和 collection 集合的遍历方式一样：</p><ul><li>迭代器遍历</li><li>增强 for 遍历</li><li>lambda 表达式遍历</li></ul><p>map 映射的遍历方式有以下三种方式：</p><ul><li>根据键遍历</li><li>根据键值对遍历</li><li>lambda 表达式遍历</li></ul><h3 id="迭代器遍历"><a href="#迭代器遍历" class="headerlink" title="迭代器遍历"></a>迭代器遍历</h3><p>使用集合中的<code>iterator()</code>方法获取迭代器，以下是迭代器对象常用方法：</p><table><thead><tr><th>方法名称</th><th>说明</th></tr></thead><tbody><tr><td>boolean hasNext()</td><td>判断当前位置是否有元素，有返回 true，无则返回 false</td></tr><tr><td>E next()</td><td>获取当前位置的元素，并将迭代器对象移向下一个元素</td></tr><tr><td>void remove()</td><td>删除上一次调用 next()返回的对象</td></tr></tbody></table><p>使用 Iterator 正向遍历 ArrayList：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;🐂🍺&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;牛啤&quot;</span>;</span><br><span class="line">        Collection&lt;String&gt; coll1 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        coll1.add(s1);</span><br><span class="line">        coll1.add(s2);</span><br><span class="line">        coll1.add(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        coll1.add(<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">        Iterator&lt;String&gt; iterator1 = coll1.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator1.hasNext()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> iterator1.next();</span><br><span class="line">            <span class="keyword">if</span> (s.equals(<span class="string">&quot;bbb&quot;</span>)) iterator1.remove();</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(coll1.size());</span><br><span class="line">        System.out.println(coll1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>🐂🍺<br>牛啤<br>aaa<br>bbb<br>3<br>[🐂🍺, 牛啤, aaa]</p></blockquote><p>使用 Iterator 正向遍历 LinkedList：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;🐂🍺&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;牛啤&quot;</span>;</span><br><span class="line">        Collection&lt;String&gt; coll2 = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        coll2.add(s1);</span><br><span class="line">        coll2.add(s2);</span><br><span class="line">        coll2.add(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        coll2.add(<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">        Iterator&lt;String&gt; iterator2 = coll2.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator2.hasNext()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> iterator2.next();</span><br><span class="line">            <span class="keyword">if</span> (s.equals(<span class="string">&quot;aaa&quot;</span>)) iterator2.remove();</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(coll2.size());</span><br><span class="line">        System.out.println(coll2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>🐂🍺<br>牛啤<br>aaa<br>bbb<br>3<br>[🐂🍺, 牛啤, bbb]</p></blockquote><p>在使用迭代器遍历时，禁止使用集合的 remove 方法，会导致<code>ConcurrentModificationException</code>报错</p><h3 id="列表迭代器遍历"><a href="#列表迭代器遍历" class="headerlink" title="列表迭代器遍历"></a>列表迭代器遍历</h3><p>List 集合中特有的迭代器，用方法<code>listIterator()</code>来获取指向 0 索引的迭代器，使用<code>listIterator(int index)</code>可以得到指向指定索引的迭代器，<code>ListIterator</code>是<code>Iterator</code>的子接口，所以包含父类中的方法，以下是常用方法：</p><table><thead><tr><th>方法名称</th><th>说明</th></tr></thead><tbody><tr><td>void add(E e)</td><td>在指向处插入元素</td></tr><tr><td>boolean hasNext()</td><td>判断当前位置是否有元素，有返回 true，无则返回 false</td></tr><tr><td>E next()</td><td>获取当前位置的元素，并将迭代器对象移向下一个元素</td></tr><tr><td>int nextIndex()</td><td>返回当前位置的索引</td></tr><tr><td>boolean hasPrevious()</td><td>判断上一个位置是否有元素，有返回 true，无则返回 false</td></tr><tr><td>E previous()</td><td>获取上一个位置的元素，并将迭代器对象移向上一个元素</td></tr><tr><td>int previousIndex</td><td>返回上一个位置的索引</td></tr><tr><td>void remove()</td><td>删除上一次调用 previous()或 next()返回的元素</td></tr><tr><td>void set(E e)</td><td>修改上一次调用 previous()或 next()返回的元素</td></tr></tbody></table><p>使用 ListIterator 反向遍历 ArrayList：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;🐂🍺&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;牛啤&quot;</span>;</span><br><span class="line">        List&lt;String&gt; list1 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list1.add(s1);</span><br><span class="line">        list1.add(s2);</span><br><span class="line">        list1.add(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        list1.add(<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">        ListIterator&lt;String&gt; listIterator1 = list1.listIterator(list1.size());</span><br><span class="line">        <span class="keyword">while</span> (listIterator1.hasPrevious()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> listIterator1.previous();</span><br><span class="line">            <span class="keyword">if</span> (s.equals(<span class="string">&quot;bbb&quot;</span>)) listIterator1.remove();</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list1.size());</span><br><span class="line">        System.out.println(list1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>bbb<br>aaa<br>牛啤<br>🐂🍺<br>3<br>[🐂🍺, 牛啤, aaa]</p></blockquote><p>使用 ListIterator 反向遍历 LinkedList：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;🐂🍺&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;牛啤&quot;</span>;</span><br><span class="line">        List&lt;String&gt; list2 = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        list2.add(s1);</span><br><span class="line">        list2.add(s2);</span><br><span class="line">        list2.add(<span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">        list2.add(<span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">        ListIterator&lt;String&gt; listIterator2 = list2.listIterator(list2.size());</span><br><span class="line">        <span class="keyword">while</span> (listIterator2.hasPrevious()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> listIterator2.previous();</span><br><span class="line">            <span class="keyword">if</span> (s.equals(<span class="string">&quot;aaa&quot;</span>)) listIterator2.remove();</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list2.size());</span><br><span class="line">        System.out.println(list2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>bbb<br>aaa<br>牛啤<br>🐂🍺<br>3<br>[🐂🍺, 牛啤, bbb]</p></blockquote><h3 id="增强-for-遍历"><a href="#增强-for-遍历" class="headerlink" title="增强 for 遍历"></a>增强 for 遍历</h3><p>增强 for 遍历的底层其实就是迭代器遍历，与迭代器遍历相比在使用时可以简化书写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (String s : coll) &#123;</span><br><span class="line">    System.out.println(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="lambda-表达式遍历"><a href="#lambda-表达式遍历" class="headerlink" title="lambda 表达式遍历"></a>lambda 表达式遍历</h3><p>使用 forEach 方法来遍历集合<br>void forEach(Consumer&lt;? super E&gt; action)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">coll.forEach(<span class="keyword">new</span> <span class="title class_">Consumer</span>&lt;String&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">accept</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>accept 方法中填写遍历中要做的事</p><p>由于 Consumer 接口是一个函数式接口，所以可以将匿名内部类改写为 lambda 表达式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">coll.forEach((System.out::println));</span><br></pre></td></tr></table></figure><h3 id="根据键遍历"><a href="#根据键遍历" class="headerlink" title="根据键遍历"></a>根据键遍历</h3><p>调用 Map 对象的 keySet()，得到键的 Set 集合，接着根据键的值在 Map 中获取对应的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Map&lt;String, String&gt; hm = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        System.out.println(hm.put(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>));  <span class="comment">//null</span></span><br><span class="line">        System.out.println(hm.put(<span class="string">&quot;b&quot;</span>, <span class="string">&quot;bcd&quot;</span>));<span class="comment">//null</span></span><br><span class="line">        System.out.println(hm.put(<span class="string">&quot;c&quot;</span>, <span class="string">&quot;adb&quot;</span>));<span class="comment">//null</span></span><br><span class="line">        System.out.println(hm.put(<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;a&quot;</span>));<span class="comment">//null</span></span><br><span class="line"></span><br><span class="line">        Set&lt;String&gt; keys = hm.keySet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> hm.get(key);</span><br><span class="line">            System.out.println(key + <span class="string">&quot; = &quot;</span> + value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//a = b</span></span><br><span class="line">        <span class="comment">//b = bcd</span></span><br><span class="line">        <span class="comment">//c = adb</span></span><br><span class="line">        <span class="comment">//abc = a</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="根据键值对遍历"><a href="#根据键值对遍历" class="headerlink" title="根据键值对遍历"></a>根据键值对遍历</h3><p>调用 Map 对象的 entrySet()，得到键值对对象的 Set 集合，接着调用 entry 对象的 getKey()和 getValue()方法获取对应的键和值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Map&lt;String, String&gt; hm = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        System.out.println(hm.put(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>));  <span class="comment">//null</span></span><br><span class="line">        System.out.println(hm.put(<span class="string">&quot;b&quot;</span>, <span class="string">&quot;bcd&quot;</span>));<span class="comment">//null</span></span><br><span class="line">        System.out.println(hm.put(<span class="string">&quot;c&quot;</span>, <span class="string">&quot;adb&quot;</span>));<span class="comment">//null</span></span><br><span class="line">        System.out.println(hm.put(<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;a&quot;</span>));<span class="comment">//null</span></span><br><span class="line"></span><br><span class="line">        Set&lt;Map.Entry&lt;String, String&gt;&gt; entries = hm.entrySet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : entries) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">            <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> entry.getValue();</span><br><span class="line">            System.out.println(key + <span class="string">&quot; = &quot;</span> + value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//a = b</span></span><br><span class="line">        <span class="comment">//b = bcd</span></span><br><span class="line">        <span class="comment">//c = adb</span></span><br><span class="line">        <span class="comment">//abc = a</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序算法</title>
      <link href="/post/0s6505jl.html"/>
      <url>/post/0s6505jl.html</url>
      
        <content type="html"><![CDATA[<h2 id="冒泡排序（Bubble-Sort）"><a href="#冒泡排序（Bubble-Sort）" class="headerlink" title="冒泡排序（Bubble Sort）"></a>冒泡排序（Bubble Sort）</h2><h2 id="选择排序（Seleciton-Sort）"><a href="#选择排序（Seleciton-Sort）" class="headerlink" title="选择排序（Seleciton Sort）"></a>选择排序（Seleciton Sort）</h2><h2 id="插入排序（Insertion-Sort）"><a href="#插入排序（Insertion-Sort）" class="headerlink" title="插入排序（Insertion Sort）"></a>插入排序（Insertion Sort）</h2><h2 id="快速排序（Quick-Sort）"><a href="#快速排序（Quick-Sort）" class="headerlink" title="快速排序（Quick Sort）"></a>快速排序（Quick Sort）</h2><h2 id="希尔排序（Shell-Sort）"><a href="#希尔排序（Shell-Sort）" class="headerlink" title="希尔排序（Shell Sort）"></a>希尔排序（Shell Sort）</h2><h2 id="归并排序（Merge-Sort）"><a href="#归并排序（Merge-Sort）" class="headerlink" title="归并排序（Merge Sort）"></a>归并排序（Merge Sort）</h2><h2 id="堆排序（Heap-Sort）"><a href="#堆排序（Heap-Sort）" class="headerlink" title="堆排序（Heap Sort）"></a>堆排序（Heap Sort）</h2><h2 id="桶排序（Bucket-Sort）"><a href="#桶排序（Bucket-Sort）" class="headerlink" title="桶排序（Bucket Sort）"></a>桶排序（Bucket Sort）</h2><h2 id="计数排序（Counting-Sort）"><a href="#计数排序（Counting-Sort）" class="headerlink" title="计数排序（Counting Sort）"></a>计数排序（Counting Sort）</h2><h2 id="基数排序（radix-Sort）"><a href="#基数排序（radix-Sort）" class="headerlink" title="基数排序（radix Sort）"></a>基数排序（radix Sort）</h2>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 冒泡排序 </tag>
            
            <tag> 选择排序 </tag>
            
            <tag> 插入排序 </tag>
            
            <tag> 快速排序 </tag>
            
            <tag> 希尔排序 </tag>
            
            <tag> 归并排序 </tag>
            
            <tag> 堆排序 </tag>
            
            <tag> 桶排序 </tag>
            
            <tag> 基数排序 </tag>
            
            <tag> 计数排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查找算法</title>
      <link href="/post/2v95z4z2.html"/>
      <url>/post/2v95z4z2.html</url>
      
        <content type="html"><![CDATA[<h2 id="线性查找（Linear-Search）"><a href="#线性查找（Linear-Search）" class="headerlink" title="线性查找（Linear Search）"></a>线性查找（Linear Search）</h2><h2 id="二分查找（Binary-Search）"><a href="#二分查找（Binary-Search）" class="headerlink" title="二分查找（Binary Search）"></a>二分查找（Binary Search）</h2><h2 id="插值查找（Interpolation-Search）"><a href="#插值查找（Interpolation-Search）" class="headerlink" title="插值查找（Interpolation Search）"></a>插值查找（Interpolation Search）</h2><h2 id="斐波那契查找（Fibonacci-Search）"><a href="#斐波那契查找（Fibonacci-Search）" class="headerlink" title="斐波那契查找（Fibonacci Search）"></a>斐波那契查找（Fibonacci Search）</h2><h2 id="分块查找（Block-Search）"><a href="#分块查找（Block-Search）" class="headerlink" title="分块查找（Block Search）"></a>分块查找（Block Search）</h2><h2 id="哈希查找（Hash-Search）"><a href="#哈希查找（Hash-Search）" class="headerlink" title="哈希查找（Hash Search）"></a>哈希查找（Hash Search）</h2>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 线性查找 </tag>
            
            <tag> 二分查找 </tag>
            
            <tag> 插值查找 </tag>
            
            <tag> 斐波那契查找 </tag>
            
            <tag> 分块查找 </tag>
            
            <tag> 哈希查找 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>regex和replacement转义</title>
      <link href="/post/haki98t3.html"/>
      <url>/post/haki98t3.html</url>
      
        <content type="html"><![CDATA[<h2 id="replacement-转义"><a href="#replacement-转义" class="headerlink" title="replacement 转义"></a>replacement 转义</h2><p>在使用 replaceAll 方法时，遇到 replacement 中含有’$’和’&#39;的情况会发生报错。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;Java8,Java11,Java17,Java21&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">regex</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">        System.out.println(content.replaceAll(regex, <span class="string">&quot;$&quot;</span>));</span><br><span class="line">        System.out.println(content.replaceAll(regex, <span class="string">&quot;\\&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;Java8,Java11,Java17,Java21&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">regex</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">        System.out.println(content.replaceAll(regex, <span class="string">&quot;\\$&quot;</span>));</span><br><span class="line">        System.out.println(content.replaceAll(regex, <span class="string">&quot;\\\\&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>$8,$11,$17,$21<br>\8,\11,\17,\21</p></blockquote><p>当不知道 replacement 中时候含有’$’和’&#39;时，可以使用<code>Matcher</code>类中的<code>quoteReplacement</code>来解决问题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;Java8,Java11,Java17,Java21&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">regex</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">        System.out.println(content.replaceAll(regex, Matcher.quoteReplacement(<span class="string">&quot;$&quot;</span>)));</span><br><span class="line">        System.out.println(content.replaceAll(regex, Matcher.quoteReplacement(<span class="string">&quot;\\&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>$8,$11,$17,$21<br>\8,\11,\17,\21</p></blockquote><h2 id="regex-转义"><a href="#regex-转义" class="headerlink" title="regex 转义"></a>regex 转义</h2><p>和 replacement 的情况类似，可以使用<code>Pattern</code>类中<code>quote</code>来解决问题</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;$8,$11,$17,$21&quot;</span>;</span><br><span class="line">        System.out.println(content.replaceAll(Pattern.quote(<span class="string">&quot;$&quot;</span>), <span class="string">&quot;Java&quot;</span>));</span><br><span class="line">        System.out.println(content.replaceAll(Pattern.quote(<span class="string">&quot;$&quot;</span>), Matcher.quoteReplacement(<span class="string">&quot;\\&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Java8,Java11,Java17,Java21<br>\8,\11,\17,\21</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="/post/x4idevfe.html"/>
      <url>/post/x4idevfe.html</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>正则表达式是一种强大的工具 😎，用于描述和匹配字符串的特定模式，可用于各种编程语言和文本处理工具中，如 Java，Python，JavaScript 等。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>正则表达式由元字符组成，下表包含了元字符的完整列表以及它们在正则表达式上下文中的行为：</p><table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td>\</td><td>将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用、或一个八进制转义符。例如，’n’ 匹配字符 “n”。’\n’ 匹配一个换行符。序列 ‘\\‘ 匹配 “\“ 而 “\(“ 则匹配 “(“。</td></tr><tr><td>^</td><td>匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 ‘\n’ 或 ‘\r’ 之后的位置。</td></tr><tr><td>$</td><td>匹配输入字符串的结束位置。如果设置了 RegExp 对象的 Multiline 属性，$ 也匹配 ‘\n’ 或 ‘\r’ 之前的位置。</td></tr><tr><td>*</td><td>匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。 * 等价于{0,}。</td></tr><tr><td>+</td><td>匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td></tr><tr><td>?</td><td>匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 或 “does” 。? 等价于 {0,1}。</td></tr><tr><td>{n}</td><td>n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td></tr><tr><td>{n,}</td><td>n 是一个非负整数。至少匹配 n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*‘。</td></tr><tr><td>{n,m}</td><td>m 和 n 均为非负整数，其中 n &lt;&#x3D; m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td></tr><tr><td>?</td><td>当该字符紧跟在任何一个其他限制符 (*, +, ?, {n}, {n,}, {n,m}) 后面时，匹配模式是非贪婪的。<mark class="hl-label red">非贪婪模式</mark> 尽可能少的匹配所搜索的字符串，而默认的<mark class="hl-label blue">贪婪模式</mark> 则尽可能多的匹配所搜索的字符串。例如，对于字符串 “oooo”，’o+?’ 将匹配单个 “o”，而 ‘o+’ 将匹配所有 ‘o’。</td></tr><tr><td>.</td><td>匹配除换行符（\n、\r）之外的任何单个字符。要匹配包括 ‘\n’ 在内的任何字符，请使用像”(.|\n)”的模式。</td></tr><tr><td>(pattern)</td><td>匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在 VBScript 中使用 SubMatches 集合，在 JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 ‘\(‘ 或 ‘\)’。</td></tr><tr><td>(?:pattern)</td><td>匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (|) 来组合一个模式的各个部分是很有用。例如， ‘industr(?:y|ies) 就是一个比 ‘industry|industries’ 更简略的表达式。</td></tr><tr><td>(?&#x3D;pattern)</td><td>正向肯定预查（look ahead positive assert），在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，”Windows(?&#x3D;95|98|NT|2000)”能匹配”Windows2000”中的”Windows”，但不能匹配”Windows3.1”中的”Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td>(?!pattern)</td><td>正向否定预查(negative assert)，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如”Windows(?!95|98|NT|2000)”能匹配”Windows3.1”中的”Windows”，但不能匹配”Windows2000”中的”Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td>(?&lt;&#x3D;pattern)</td><td>反向(look behind)肯定预查，与正向肯定预查类似，只是方向相反。例如，”(?&lt;&#x3D;95|98|NT|2000)Windows”能匹配”2000Windows”中的”Windows”，但不能匹配”3.1Windows”中的”Windows”。</td></tr><tr><td>(?&lt;!pattern)</td><td>反向否定预查，与正向否定预查类似，只是方向相反。例如”(?&lt;!95|98|NT|2000)Windows”能匹配”3.1Windows”中的”Windows”，但不能匹配”2000Windows”中的”Windows”。</td></tr><tr><td>x|y</td><td>匹配 x 或 y。例如，’z|food’ 能匹配 “z” 或 “food”。’(z|f)ood’ 则匹配 “zood” 或 “food”。</td></tr><tr><td>[xyz]</td><td>字符集合。匹配所包含的任意一个字符。例如， ‘[abc]’ 可以匹配 “plain” 中的 ‘a’。</td></tr><tr><td>[^xyz]</td><td>负值字符集合。匹配未包含的任意字符。例如， ‘[^abc]’ 可以匹配 “plain” 中的’p’、’l’、’i’、’n’。</td></tr><tr><td>[a-z]</td><td>字符范围。匹配指定范围内的任意字符。例如，’[a-z]’ 可以匹配 ‘a’ 到 ‘z’ 范围内的任意小写字母字符。</td></tr><tr><td>[^a-z]</td><td>负值字符范围。匹配任何不在指定范围内的任意字符。例如，’[^a-z]’ 可以匹配任何不在 ‘a’ 到 ‘z’ 范围内的任意字符。</td></tr><tr><td>\b</td><td>匹配一个单词边界，也就是指单词和空格间的位置。例如， ‘er\b’ 可以匹配”never” 中的 ‘er’，但不能匹配 “verb” 中的 ‘er’。</td></tr><tr><td>\B</td><td>匹配非单词边界。’er\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。</td></tr><tr><td>\cx</td><td>匹配由 x 指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td></tr><tr><td>\d</td><td>匹配一个数字字符。等价于 [0-9]。</td></tr><tr><td>\D</td><td>匹配一个非数字字符。等价于 [^0-9]。</td></tr><tr><td>\f</td><td>匹配一个换页符。等价于 \x0c 和 \cL。</td></tr><tr><td>\n</td><td>匹配一个换行符。等价于 \x0a 和 \cJ。</td></tr><tr><td>\r</td><td>匹配一个回车符。等价于 \x0d 和 \cM。</td></tr><tr><td>\s</td><td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。</td></tr><tr><td>\S</td><td>匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</td></tr><tr><td>\t</td><td>匹配一个制表符。等价于 \x09 和 \cI。</td></tr><tr><td>\v</td><td>匹配一个垂直制表符。等价于 \x0b 和 \cK。</td></tr><tr><td>\w</td><td>匹配字母、数字、下划线。等价于’[A-Za-z0-9_]’。</td></tr><tr><td>\W</td><td>匹配非字母、数字、下划线。等价于 ‘[^A-Za-z0-9_]’。</td></tr><tr><td>\xn</td><td>匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，’\x41’ 匹配 “A”。’\x041’ 则等价于 ‘\x04’ &amp; “1”。正则表达式中可以使用 ASCII 编码。</td></tr><tr><td>\num</td><td>匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，’(.)\1’ 匹配两个连续的相同字符。</td></tr><tr><td>\n</td><td>标识一个八进制转义值或一个向后引用。如果 \n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。</td></tr><tr><td>\nm</td><td>标识一个八进制转义值或一个向后引用。如果 \nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 \nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \nm 将匹配八进制转义值 nm。</td></tr><tr><td>\nml</td><td>如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。</td></tr><tr><td>\un</td><td>匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， \u00A9 匹配版权符号 (?)。</td></tr></tbody></table><h2 id="Java-中的正则表达式"><a href="#Java-中的正则表达式" class="headerlink" title="Java 中的正则表达式"></a>Java 中的正则表达式</h2><p>在<code>Java</code>中使用正则表达式需要导入<code>java.util.regex</code>包。<br><code>java.util.regex</code>包中主要包含以下三个类：</p><ul><li><strong>Patter</strong>：<br>pattern 对象是一个正则表达式的编译表示。Pattern 类没有公共构造方法。要创建一个 Pattern 对象，你必须首先调用其公共静态编译方法，它返回一个 Pattern 对象。该方法接受一个正则表达式作为它的第一个参数。</li><li><strong>Matcher</strong>：<br>Matcher 对象是对输入字符串进行解释和匹配操作的引擎。与 Pattern 类一样，Matcher 也没有公共构造方法。你需要调用 Pattern 对象的 matcher 方法来获得一个 Matcher 对象。</li><li><strong>PatternSyntaxException</strong>：<br>PatternSyntaxException 是一个非强制异常类，它表示一个正则表达式模式中的语法错误。</li></ul><p>由于 Java 中的正则表达式也是字符串，因此转义字符<code>\</code>会在字符串中生效，所以对于<code>\d</code>等元字符要写成<code>\\d</code>之类的。</p><p>一个简单的查找样例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;Java8,Java11,Java17,Java21&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">regex</span> <span class="operator">=</span> <span class="string">&quot;((?i)java(?:8|11|17|21))&quot;</span>;</span><br><span class="line">        <span class="type">Pattern</span> <span class="variable">p</span> <span class="operator">=</span> Pattern.compile(regex);</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">m</span> <span class="operator">=</span> p.matcher(content);</span><br><span class="line">        <span class="keyword">while</span> (m.find())&#123;</span><br><span class="line">            System.out.println(m.group());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Java8<br>Java11<br>Java17<br>Java21</p></blockquote><h2 id="Matcher-类的方法"><a href="#Matcher-类的方法" class="headerlink" title="Matcher 类的方法"></a>Matcher 类的方法</h2><h3 id="索引方法"><a href="#索引方法" class="headerlink" title="索引方法"></a>索引方法</h3><ul><li>public int start()<br>返回以前匹配的初始索引。</li><li>public int start(int group)<br>返回在以前的匹配操作期间，由给定组所捕获的子序列的初始索引</li><li>public int end()<br>返回最后匹配字符之后的偏移量。</li><li>public int end(int group)<br>返回在以前的匹配操作期间，由给定组所捕获子序列的最后字符之后的偏移量。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;Java8,Java11,Java17,Java21&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">regex</span> <span class="operator">=</span> <span class="string">&quot;(?i)java(?:8|11|17|21)&quot;</span>;</span><br><span class="line">        <span class="type">Pattern</span> <span class="variable">p</span> <span class="operator">=</span> Pattern.compile(regex);</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">m</span> <span class="operator">=</span> p.matcher(content);</span><br><span class="line">        <span class="keyword">while</span> (m.find())&#123;</span><br><span class="line">            System.out.println(m.start());</span><br><span class="line">            System.out.println(m.end());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>0<br>5<br>6<br>12<br>13<br>19<br>20<br>26</p></blockquote><p>定组捕获：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;Java8,Java11,Java17,Java21&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">regex</span> <span class="operator">=</span> <span class="string">&quot;(?i)java(8|11|17|21)&quot;</span>;</span><br><span class="line">        <span class="type">Pattern</span> <span class="variable">p</span> <span class="operator">=</span> Pattern.compile(regex);</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">m</span> <span class="operator">=</span> p.matcher(content);</span><br><span class="line">        <span class="keyword">while</span> (m.find())&#123;</span><br><span class="line">            System.out.println(m.start(<span class="number">1</span>));</span><br><span class="line">            System.out.println(m.end(<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>4<br>5<br>10<br>12<br>17<br>19<br>24<br>26</p></blockquote><p>这里返回的索引是”java”后面的版本号的索引。</p><h3 id="查找方法"><a href="#查找方法" class="headerlink" title="查找方法"></a>查找方法</h3><ul><li>public boolean lookingAt()<br>尝试将从区域开头开始的输入序列与该模式匹配。</li><li>public boolean find()<br>尝试查找与该模式匹配的输入序列的下一个子序列。</li><li>public boolean find(int start)<br>重置此匹配器，然后尝试查找匹配该模式、从指定索引开始的输入序列的下一个子序列。</li><li>public boolean matches()<br>尝试将整个区域与模式匹配。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content1</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content2</span> <span class="operator">=</span> <span class="string">&quot;JavaJava&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">regex</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">        <span class="type">Pattern</span> <span class="variable">p</span> <span class="operator">=</span> Pattern.compile(regex);</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">m1</span> <span class="operator">=</span> p.matcher(content1);</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">m2</span> <span class="operator">=</span> p.matcher(content2);</span><br><span class="line"></span><br><span class="line">        System.out.println(m1.matches());</span><br><span class="line">        System.out.println(m2.matches());</span><br><span class="line">        System.out.println(m1.lookingAt());</span><br><span class="line">        System.out.println(m2.lookingAt());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>true<br>false<br>true<br>true</p></blockquote><h3 id="替换方法"><a href="#替换方法" class="headerlink" title="替换方法"></a>替换方法</h3><ul><li>public Matcher appendReplacement(StringBuffer sb, String replacement)<br>实现非终端添加和替换步骤。</li><li>public StringBuffer appendTail(StringBuffer sb)<br>实现终端添加和替换步骤。</li><li>public String replaceAll(String replacement)<br>替换模式与给定替换字符串相匹配的输入序列的每个子序列。</li><li>public String replaceFirst(String replacement)<br>替换模式与给定替换字符串匹配的输入序列的第一个子序列。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;Java8,Java11,Java17,Java21&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">regex</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">        <span class="type">Pattern</span> <span class="variable">p</span> <span class="operator">=</span> Pattern.compile(regex);</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">m</span> <span class="operator">=</span> p.matcher(content);</span><br><span class="line"></span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">while</span> (m.find()) &#123;</span><br><span class="line">            m.appendReplacement(sb1, <span class="string">&quot;*_*&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        m.appendTail(sb1);</span><br><span class="line">        System.out.println(sb1);</span><br><span class="line"></span><br><span class="line">        m.reset();</span><br><span class="line"></span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">sb2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">if</span> (m.find()) &#123;</span><br><span class="line">            m.appendReplacement(sb2, <span class="string">&quot;*_*&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        m.appendTail(sb2);</span><br><span class="line">        System.out.println(sb2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>*_*8,*_*11,*_*17,*_*21<br>*_*8,Java11,Java17,Java21</p></blockquote><p>其实<code>replaceAll</code>和<code>replaceFirst</code>的底层就是调用<code>appendReplacement</code>以及<code>appendTail</code>来实现的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;Java8,Java11,Java17,Java21&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">regex</span> <span class="operator">=</span> <span class="string">&quot;Java&quot;</span>;</span><br><span class="line">        <span class="type">Pattern</span> <span class="variable">p</span> <span class="operator">=</span> Pattern.compile(regex);</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">m</span> <span class="operator">=</span> p.matcher(content);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> m.replaceAll(<span class="string">&quot;*_*&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> m.replaceFirst(<span class="string">&quot;*_*&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(s1);</span><br><span class="line">        System.out.println(s2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>*_*8,*_*11,*_*17,*_*21<br>*_*8,Java11,Java17,Java21</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符编码</title>
      <link href="/post/4g7gt549.html"/>
      <url>/post/4g7gt549.html</url>
      
        <content type="html"><![CDATA[<h2 id="字符编码"><a href="#字符编码" class="headerlink" title="字符编码"></a>字符编码</h2><p>在早期计算机系统中，为了给字符编码，美国国家标准学会（American National Standard Institute，ANSI）制定了一套英文编码规范，包含英文字母，数字和一些常用符号，编码范围从<code>0</code>到<code>127</code>，称为<code>ascii</code>编码，每个字素（grapheme，a single unit of a human writing system）只占用一个字节，比如<code>A</code>的编码为<code>0x41(65)</code>。</p><p>但是随着计算机的发展的全球化，计算机需要能支持更多的语言，也就是说每一种语言的文字都需要一套与之对应的编码，对于拉丁母来说，一个字节的大小就能基本包含常用的字母和符号，但是对于东亚的表意文字来说，一个字节的大小显然是不够用的，需要更多的字节数，比如一个<code>中</code>占用两个字节</p><p>在早期的时候并没有一套统一的规范，于是不同的国家和地区都制定了一套适用于本区域文字的编码，比如中文有<code>GB2312</code>，日文有<code>Shift_JIS</code>，韩文有<code>EUC-KR</code>，不同的编码之间会冲突，这也导致了乱码的问题出现。</p><h2 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h2><p>为了统一全球所有语言的编码，全球统一码联盟发布了<code>Unicode</code>编码，它把世界上的主要语言都纳入同一套编码中，这样，中文，日文，韩文和其他语言也就不会冲突了。它的长度为2~4个字节，比如<code>A</code>的<code>ascii</code>编码为<code>0x41(65)</code>，而<code>Unicode</code>编码为<code>U+0041</code>，<code>中</code>的<code>GB2312</code>编码为<code>0xd6d0</code>，<code>Unicode</code>编码为<code>U+4e2d</code>，除此之外，<code>Unicode</code>编码还包含了emoji表情，比如<code>🐂</code>的编码为<code>U+1f402</code>，<code>🍺</code>的编码为<code>U+1f37a</code>。</p><h2 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h2><p>而我们常说的<code>UTF-8</code>编码是一种编码方式，它将固定长度的<code>Unicode</code>编码转换成长度为1~4个字节的二进制码，比如<code>A</code>的<code>UTF-8</code>编码为<code>0x41</code>，只有一个字节的长度，所以对于大量的英文文本，采用<code>UTF-8</code>编码可以节省大量的存储空间，<code>UTF-8</code>编码是通过高字节位来判断一个字素到底是几个字节的。</p><h2 id="Java中的Unicode码点"><a href="#Java中的Unicode码点" class="headerlink" title="Java中的Unicode码点"></a>Java中的Unicode码点</h2><p>在<code>Java</code>中，<code>char</code>类型是采用<code>UTF-16</code>编码的，也就是两个字节来表示一个字素，但是对于一些长度超过两个字节的<code>Unicode</code>点（用来表示一个字素的Unicode编码）就不够用了， 所以就需要用两个char来表示一个码点，因此在用<code>char</code>类型遍历字符串的时候就会产生错误。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;🐂🍺&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;牛啤&quot;</span>;</span><br><span class="line">        System.out.println(s1.length()); <span class="comment">// 4</span></span><br><span class="line">        System.out.println(s2.length()); <span class="comment">// 2</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s1.length(); i++) &#123;</span><br><span class="line">            System.out.println(s1.charAt(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// ?</span></span><br><span class="line">        <span class="comment">// ?</span></span><br><span class="line">        <span class="comment">// ?</span></span><br><span class="line">        <span class="comment">// ?</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s2.length(); i++) &#123;</span><br><span class="line">            System.out.println(s2.charAt(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 牛</span></span><br><span class="line">        <span class="comment">// 啤</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以为了解决这种问题，<code>Java</code>提供了以码点的长度方式来遍历字符串的对应方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;🐂🍺&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;牛啤&quot;</span>;</span><br><span class="line">        System.out.println(s1.codePointCount(<span class="number">0</span>, s1.length())); <span class="comment">// 2</span></span><br><span class="line">        System.out.println(s2.codePointCount(<span class="number">0</span>, s2.length())); <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">index1</span> <span class="operator">=</span> s1.offsetByCodePoints(<span class="number">0</span>, <span class="number">0</span>); <span class="comment">// 得到从0索引开始偏移0个码点的索引</span></span><br><span class="line">        System.out.println(index1); <span class="comment">// 0</span></span><br><span class="line">        System.out.println(Integer.toHexString(s1.codePointAt(index1))); <span class="comment">// 1f402</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">index2</span> <span class="operator">=</span> s1.offsetByCodePoints(<span class="number">0</span>, <span class="number">1</span>); <span class="comment">// 得到从0索引开始偏移1个码点的索引</span></span><br><span class="line">        System.out.println(index2); <span class="comment">// 2</span></span><br><span class="line">        System.out.println(Integer.toHexString(s1.codePointAt(index2))); <span class="comment">// 1f37a</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 正向</span></span><br><span class="line">        <span class="type">int</span> cp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s1.length(); i += Character.charCount(cp)) &#123;</span><br><span class="line">            cp = s1.codePointAt(i);</span><br><span class="line">            System.out.println(Integer.toHexString(cp));</span><br><span class="line">            System.out.println(Character.toString(cp));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 1f402</span></span><br><span class="line">        <span class="comment">// 🐂</span></span><br><span class="line">        <span class="comment">// 1f37a</span></span><br><span class="line">        <span class="comment">// 🍺</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反向</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> s1.length() - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Character.isSurrogate(s1.charAt(i))) i--;</span><br><span class="line">            cp = s1.codePointAt(i);</span><br><span class="line">            System.out.println(Integer.toHexString(cp));</span><br><span class="line">            System.out.println(Character.toString(cp));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 1f37a</span></span><br><span class="line">        <span class="comment">// 🍺</span></span><br><span class="line">        <span class="comment">// 1f402</span></span><br><span class="line">        <span class="comment">// 🐂</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是，以上遍历的方式显然不够优雅，其实<code>Java</code>还提供了将字符串变为一个码点数组的方法，那我们就可以以数组的方式去遍历这个字符串。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;🐂🍺&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;牛啤&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// codePoints方法可以得到一个int流</span></span><br><span class="line">        <span class="type">int</span>[] codePoints = s1.codePoints().toArray();</span><br><span class="line">        System.out.println(Arrays.toString(codePoints));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将码点数组转回字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(codePoints, <span class="number">0</span>, codePoints.length);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将单个码点转为字符串可以用<code>Character.toString(int codePoint)</code>方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">codePoint</span> <span class="operator">=</span> <span class="number">0x1f37a</span>;</span><br><span class="line">        System.out.println(Character.toString(codePoint));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 编码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于hexo搭建博客基础（三）</title>
      <link href="/post/r51bjcg8.html"/>
      <url>/post/r51bjcg8.html</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><h3 id="博客搭建导航-🌏"><a href="#博客搭建导航-🌏" class="headerlink" title="博客搭建导航 🌏"></a>博客搭建导航 🌏</h3><ol><li><a href="/post/6706d621.html" title="基于hexo搭建博客基础（一）">基于hexo搭建博客基础（一）</a></li><li><a href="/post/sunqxf91.html" title="基于hexo搭建博客基础（二）">基于hexo搭建博客基础（二）</a></li><li><a href="/post/r51bjcg8.html" title="基于hexo搭建博客基础（三）">基于hexo搭建博客基础（三）</a></li></ol></div><script src='/js/series.js'></script><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><ol><li>这个系列是关于如何基于hexo框架以及GitHub Pages搭建自己的博客网站。</li><li>❗创建本系列博客的初衷也只是为了记录一下自己的学习过程，以防之后健忘❗。</li><li>虽说如此，但是本系列博客已经写的很详细了，可能后面的内容会比较简略，就算是零基础也能懂大部分。</li><li>关于butterfly配置文件中的参数说明，可以参考<a href="https://butterfly.js.org/en/">官方</a>，这里只讲述自己使用的部分。</li></ol><h2 id="2-导航栏"><a href="#2-导航栏" class="headerlink" title="2.导航栏"></a>2.导航栏</h2><p>每一项前为项的名称，中英文都可以，后面的参数分别为<code>source</code>文件夹中的对应的标签页路径和对应的图标，以<code>||</code>来分隔，列表项要在最后添加<code>||hide</code>，使列表保持隐藏。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">时间轴:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">休闲||fas</span> <span class="string">fa-list||hide:</span></span><br><span class="line">    <span class="string">音乐:</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">    <span class="string">照片:</span> <span class="string">/gallery/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-images</span></span><br><span class="line">    <span class="string">视频:</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-video</span></span><br><span class="line">  <span class="string">友链:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="string">关于:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br></pre></td></tr></table></figure><h2 id="3-代码相关"><a href="#3-代码相关" class="headerlink" title="3.代码相关"></a>3.代码相关</h2><p>这一部分是关于代码块的设置，每一项参数的对应含义：</p><ul><li>highlight_theme:<br>代码高亮主题，有六种可选的或者选择不使用，分别为：darker &#x2F; pale night &#x2F; light &#x2F; ocean &#x2F; mac &#x2F; mac light &#x2F; false</li><li>highlight_copy:<br>代码复制按钮，默认为true</li><li>highlight_lang:<br>代码语言类型显示，默认为true</li><li>highlight_shrink:<br>代码块折叠选项，false为展开，true为折叠，none为不展开并不显示折叠按钮</li><li>highlight_height_limit:<br>代码块高度限制，单位为px</li><li>code_word_wrap:<br>是否强制换行，默认为false<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight_theme:</span> <span class="string">mac</span></span><br><span class="line"><span class="attr">highlight_copy:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight_lang:</span> <span class="literal">true</span> </span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">highlight_height_limit:</span> <span class="number">200</span></span><br><span class="line"><span class="attr">code_word_wrap:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="4-社交图标"><a href="#4-社交图标" class="headerlink" title="4.社交图标"></a>4.社交图标</h2><p>社交平台链接，格式为：<br>icon: link || the description || color</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">fas fa-envelope:</span> <span class="string">mailto:1157559178@qq.com</span> <span class="string">||</span> <span class="string">Email</span> <span class="string">||</span> <span class="string">&#x27;#4a7dbe&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="5-图片设置"><a href="#5-图片设置" class="headerlink" title="5.图片设置"></a>5.图片设置</h2><ul><li>favicon:<br>网站图标</li><li>avatar:<br>头像，effect为旋转效果</li><li>disable_top_img:<br>关闭banner图片，默认为false</li><li>index_img:<br>home page的banner图片的路径</li><li>default_top_img:<br>默认的banner图片，当对应的标签页的banner图片没有设置时应用此项</li><li>archive_img:<br>archive page的banner图片的路径</li><li>tag_img:<br>tag page的banner图片的路径</li><li>tag_per_img:<br>每一项标签的banner图片的路径</li><li>category_img:<br>category page的banner图片的路径</li><li>category_per_img:<br>每一项分类的banner图片的路径</li><li>cover:<br>文章封面设置<ul><li>index_enable:</li><li>aside_enable:</li><li>archives_enable:</li><li>position:</li><li>default_cover:<br>文章封面路径</li></ul></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span> <span class="string">/img/favicon.png</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">/img/avatar.png</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">disable_top_img:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">index_img:</span> <span class="string">none</span></span><br><span class="line"><span class="attr">default_top_img:</span> <span class="string">none</span></span><br><span class="line"><span class="attr">archive_img:</span></span><br><span class="line"><span class="attr">tag_img:</span></span><br><span class="line"><span class="attr">tag_per_img:</span></span><br><span class="line"><span class="attr">category_img:</span></span><br><span class="line"><span class="attr">category_per_img:</span></span><br><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="attr">index_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">aside_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">archives_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">both</span></span><br><span class="line">  <span class="attr">default_cover:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/1.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/2.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/3.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/4.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/5.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/6.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/7.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/8.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/9.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/10.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/11.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/12.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/13.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/14.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/15.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/16.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/17.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/18.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/19.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/20.jpg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/img/21.jpg</span></span><br></pre></td></tr></table></figure><h2 id="6-文章目录设置"><a href="#6-文章目录设置" class="headerlink" title="6.文章目录设置"></a>6.文章目录设置</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">expand:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">style_simple:</span> <span class="literal">false</span> <span class="comment"># for post</span></span><br><span class="line">  <span class="attr">scroll_percent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="7-打赏设置"><a href="#7-打赏设置" class="headerlink" title="7.打赏设置"></a>7.打赏设置</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">text:</span></span><br><span class="line">  <span class="attr">QR_code:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/wechat.jpg</span></span><br><span class="line">      <span class="attr">link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">微信</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/alipay.jpg</span></span><br><span class="line">      <span class="attr">link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">支付宝</span></span><br></pre></td></tr></table></figure><h2 id="8-分页设置"><a href="#8-分页设置" class="headerlink" title="8.分页设置"></a>8.分页设置</h2><p>文章页底下的下一篇链接的是新的一篇还是旧的一篇</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># value: 1 || 2 || false</span></span><br><span class="line"><span class="comment"># 1: The &#x27;next post&#x27; will link to old post</span></span><br><span class="line"><span class="comment"># 2: The &#x27;next post&#x27; will link to new post</span></span><br><span class="line"><span class="comment"># false: disable pagination</span></span><br><span class="line"><span class="attr">post_pagination:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="9-页脚设置"><a href="#9-页脚设置" class="headerlink" title="9.页脚设置"></a>9.页脚设置</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">since:</span> <span class="number">2024</span></span><br><span class="line">  <span class="attr">custom_text:</span> <span class="string">一个讨论技术和作为个人知识库的小站</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="10-侧边栏设置"><a href="#10-侧边栏设置" class="headerlink" title="10.侧边栏设置"></a>10.侧边栏设置</h2><p>大部分的侧边栏卡片都关闭了，简洁风至上🤔</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hide:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">left</span> <span class="comment"># left or right</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">archive:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">tag:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">category:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">card_author:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">一个努力做全栈开发的广财er~💻</span></span><br><span class="line">    <span class="attr">button:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">前往小窝🚗</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://github.com/AnA-0823</span></span><br><span class="line">  <span class="attr">card_announcement:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">欢迎来到我的小站</span></span><br><span class="line">  <span class="attr">card_recent_post:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">5</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">sort:</span> <span class="string">updated</span> <span class="comment"># date or updated</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_categories:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">8</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">expand:</span> <span class="string">none</span> <span class="comment"># none/true/false</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_tags:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">40</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">color:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">orderby:</span> <span class="string">random</span> <span class="comment"># Order of tags, random/name/length</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">1</span> <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_archives:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">monthly</span> <span class="comment"># yearly or monthly</span></span><br><span class="line">    <span class="attr">format:</span> <span class="string">MMMM</span> <span class="string">YYYY</span> <span class="comment"># eg: YYYY年MM月</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-1</span> <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">8</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_webinfo:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">post_count:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">last_push_date:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">sort_order:</span> <span class="comment"># Don&#x27;t modify the setting unless you know how it works</span></span><br><span class="line">  <span class="attr">card_post_series:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">series_title:</span> <span class="literal">false</span> <span class="comment"># The title shows the series name</span></span><br><span class="line">    <span class="attr">orderBy:</span> <span class="string">&#x27;date&#x27;</span> <span class="comment"># Order by title or date</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-1</span> <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br></pre></td></tr></table></figure><h2 id="11-访问人数"><a href="#11-访问人数" class="headerlink" title="11.访问人数"></a>11.访问人数</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi:</span></span><br><span class="line">  <span class="attr">site_uv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">site_pv:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page_pv:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="12-网站运行时间"><a href="#12-网站运行时间" class="headerlink" title="12.网站运行时间"></a>12.网站运行时间</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">runtimeshow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">publish_date:</span> <span class="number">2024</span><span class="string">/05/01</span></span><br></pre></td></tr></table></figure><h2 id="13-右下角按钮设置"><a href="#13-右下角按钮设置" class="headerlink" title="13.右下角按钮设置"></a>13.右下角按钮设置</h2><ul><li>translate:<br>简繁体翻译</li><li>readmode:<br>阅读模式</li><li>darkmode:<br>黑暗模式</li><li>rightside_scroll_percent:<br>展示当前页面的滚动百分比，默认为false</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">translate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># The text of a button</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">繁</span></span><br><span class="line">  <span class="comment"># the language of website (1 - Traditional Chinese/ 2 - Simplified Chinese）</span></span><br><span class="line">  <span class="attr">defaultEncoding:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># Time delay</span></span><br><span class="line">  <span class="attr">translateDelay:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># The text of the button when the language is Simplified Chinese</span></span><br><span class="line">  <span class="attr">msgToTraditionalChinese:</span> <span class="string">&#x27;繁&#x27;</span></span><br><span class="line">  <span class="comment"># The text of the button when the language is Traditional Chinese</span></span><br><span class="line">  <span class="attr">msgToSimplifiedChinese:</span> <span class="string">&#x27;简&#x27;</span></span><br><span class="line"><span class="attr">readmode:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">darkmode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Toggle Button to switch dark/light mode</span></span><br><span class="line">  <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Switch dark/light mode automatically (自動切換 dark mode和 light mode)</span></span><br><span class="line">  <span class="comment"># autoChangeMode: 1  Following System Settings, if the system doesn&#x27;t support dark mode, it will switch dark mode between 6 pm to 6 am</span></span><br><span class="line">  <span class="comment"># autoChangeMode: 2  Switch dark mode between 6 pm to 6 am</span></span><br><span class="line">  <span class="comment"># autoChangeMode: false</span></span><br><span class="line">  <span class="attr">autoChangeMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Set the light mode time. The value is between 0 and 24. If not set, the default value is 6 and 18</span></span><br><span class="line">  <span class="attr">start:</span> <span class="comment"># 8</span></span><br><span class="line">  <span class="attr">end:</span> <span class="comment"># 22</span></span><br><span class="line"><span class="attr">rightside_scroll_percent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="14-数学"><a href="#14-数学" class="headerlink" title="14.数学"></a>14.数学</h2><p>设置页面对mathjax和katex的支持，当per_page设置为false，须在要启用的页面中的front-matter中加上对应参数</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">katex:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">hide_scrollbar:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="15-搜索"><a href="#15-搜索" class="headerlink" title="15.搜索"></a>15.搜索</h2><ol><li>添加一个本地搜索，使用命令<code>npm install hexo-generator-search --save</code>安装搜索插件</li><li>在配置文件底下加入local search的设置<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li>在butterfly的配置中修改成以下设置<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="16-分享系统"><a href="#16-分享系统" class="headerlink" title="16.分享系统"></a>16.分享系统</h2><p>在文章页底下的分享链接，有两种，选一即可</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sharejs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">sites:</span> <span class="string">facebook,twitter,wechat,weibo,qq</span></span><br><span class="line"><span class="attr">addtoany:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">item:</span> <span class="string">facebook,twitter,wechat,sina_weibo,facebook_messenger,email,copy_link</span></span><br></pre></td></tr></table></figure><h2 id="17-评论系统"><a href="#17-评论系统" class="headerlink" title="17.评论系统"></a>17.评论系统</h2><p>支持的评论系统有：Disqus&#x2F;Disqusjs&#x2F;Livere&#x2F;Gitalk&#x2F;Valine&#x2F;Waline&#x2F;Utterances&#x2F;Facebook Comments&#x2F;Twikoo&#x2F;Giscus&#x2F;Remark42&#x2F;Artalk</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="attr">use:</span> <span class="string">utterances</span></span><br><span class="line">  <span class="attr">text:</span> <span class="literal">true</span> </span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">card_post_count:</span> <span class="literal">false</span> </span><br></pre></td></tr></table></figure><h2 id="18-在线聊天服务"><a href="#18-在线聊天服务" class="headerlink" title="18.在线聊天服务"></a>18.在线聊天服务</h2><p>展示右下角的聊天按钮，下面有几个支持的平台，去配置文件里看吧</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">chat_btn:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">chat_hide_show:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="19-网站UI配色"><a href="#19-网站UI配色" class="headerlink" title="19.网站UI配色"></a>19.网站UI配色</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme_color:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">main:</span> <span class="string">&quot;#49B1F5&quot;</span></span><br><span class="line">  <span class="attr">paginator:</span> <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">  <span class="attr">button_hover:</span> <span class="string">&quot;#FF7242&quot;</span></span><br><span class="line">  <span class="attr">text_selection:</span> <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">  <span class="attr">link_color:</span> <span class="string">&quot;#99a9bf&quot;</span></span><br><span class="line">  <span class="attr">meta_color:</span> <span class="string">&quot;#858585&quot;</span></span><br><span class="line">  <span class="attr">hr_color:</span> <span class="string">&quot;#A4D8FA&quot;</span></span><br><span class="line">  <span class="attr">code_foreground:</span> <span class="string">&quot;#F47466&quot;</span></span><br><span class="line">  <span class="attr">code_background:</span> <span class="string">&quot;rgba(27, 31, 35, .05)&quot;</span></span><br><span class="line">  <span class="attr">toc_color:</span> <span class="string">&quot;#00c4b6&quot;</span></span><br><span class="line">  <span class="attr">blockquote_padding_color:</span> <span class="string">&quot;#49b1f5&quot;</span></span><br><span class="line">  <span class="attr">blockquote_background_color:</span> <span class="string">&quot;#49b1f5&quot;</span></span><br><span class="line">  <span class="attr">scrollbar_color:</span> <span class="string">&quot;#49b1f5&quot;</span></span><br><span class="line">  <span class="attr">meta_theme_color_light:</span> <span class="string">&quot;ffffff&quot;</span></span><br><span class="line">  <span class="attr">meta_theme_color_dark:</span> <span class="string">&quot;#0d0d0d&quot;</span></span><br></pre></td></tr></table></figure><h2 id="20-网站背景和页脚背景"><a href="#20-网站背景和页脚背景" class="headerlink" title="20.网站背景和页脚背景"></a>20.网站背景和页脚背景</h2><p>我想要页脚为透明的所以设置成<code>none</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">background:</span> <span class="string">url(/img/background.jpg)</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="string">none</span></span><br><span class="line"><span class="attr">mask:</span></span><br><span class="line">  <span class="attr">header:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="21-导航栏和页脚的蒙皮效果"><a href="#21-导航栏和页脚的蒙皮效果" class="headerlink" title="21.导航栏和页脚的蒙皮效果"></a>21.导航栏和页脚的蒙皮效果</h2><p>透明页脚所以关闭页脚的蒙皮效果</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mask:</span></span><br><span class="line">  <span class="attr">header:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">footer:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="22-页面美化"><a href="#22-页面美化" class="headerlink" title="22.页面美化"></a>22.页面美化</h2><p>在标题前加上一个小图标<code>\f863</code>是小风车，然后可以在inject中添加一个旋转动画使其旋转</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">beautify:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">title-prefix-icon:</span> <span class="string">&#x27;\f863&#x27;</span></span><br><span class="line">  <span class="attr">title-prefix-icon-color:</span>  <span class="string">&#x27;#F47466&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="23-字体选择"><a href="#23-字体选择" class="headerlink" title="23.字体选择"></a>23.字体选择</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">global-font-size:</span> <span class="string">16px</span></span><br><span class="line">  <span class="attr">code-font-size:</span> <span class="string">15px</span></span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">-apple-system,</span> <span class="string">BlinkMacSystemFont,</span> <span class="string">&#x27;Segoe UI&#x27;</span><span class="string">,</span> <span class="string">&#x27;Helvetica Neue&#x27;</span><span class="string">,</span> <span class="string">Lato,</span> <span class="string">Roboto,</span> <span class="string">&#x27;PingFang SC&#x27;</span><span class="string">,</span> <span class="string">&#x27;Microsoft YaHei&#x27;</span><span class="string">,</span> <span class="string">sans-serif</span></span><br><span class="line">  <span class="attr">code-font-family:</span> <span class="string">consolas,</span> <span class="string">Menlo,</span> <span class="string">&#x27;PingFang SC&#x27;</span><span class="string">,</span> <span class="string">&#x27;Microsoft YaHei&#x27;</span><span class="string">,</span> <span class="string">sans-serif</span></span><br></pre></td></tr></table></figure><h2 id="24-分割线图标"><a href="#24-分割线图标" class="headerlink" title="24.分割线图标"></a>24.分割线图标</h2><p><code>\f0c4</code>是剪刀</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hr_icon:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">&#x27;\f0c4&#x27;</span></span><br><span class="line">  <span class="attr">icon-top:</span> <span class="string">-10px</span></span><br></pre></td></tr></table></figure><h2 id="25-主页副标题"><a href="#25-主页副标题" class="headerlink" title="25.主页副标题"></a>25.主页副标题</h2><p>effect为打字效果，可以改变副标题的源使其更动态</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">typed_option:</span></span><br><span class="line">  <span class="attr">source:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">sub:</span></span><br></pre></td></tr></table></figure><h2 id="26-加载动画"><a href="#26-加载动画" class="headerlink" title="26.加载动画"></a>26.加载动画</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">preloader:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">source:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">pace_css_url:</span></span><br></pre></td></tr></table></figure><h2 id="27-字数统计"><a href="#27-字数统计" class="headerlink" title="27.字数统计"></a>27.字数统计</h2><p>在使用前需使用命令<code>npm install hexo-wordcount --save</code>安装插件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="28-弹窗显示"><a href="#28-弹窗显示" class="headerlink" title="28.弹窗显示"></a>28.弹窗显示</h2><p>位置可选top-left &#x2F; top-center &#x2F; top-right &#x2F; bottom-left &#x2F; bottom-center &#x2F; bottom-right</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">snackbar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top-right</span></span><br><span class="line">  <span class="attr">bg_light:</span> <span class="string">&#x27;#49b1f5&#x27;</span></span><br><span class="line">  <span class="attr">bg_dark:</span> <span class="string">&#x27;#1f1f1f&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="29-中英文间空格"><a href="#29-中英文间空格" class="headerlink" title="29.中英文间空格"></a>29.中英文间空格</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pangu:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span></span><br></pre></td></tr></table></figure><p><a href="https://ana-0823.github.io/post/"><strong>至此你的博客已经焕然一新了，不过也有可能会出现很多奇怪的问题🧐，总之快去试试吧，下一章将会开始安装其他插件和魔改butterfly主题😏🛫</strong></a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于hexo搭建博客基础（二）</title>
      <link href="/post/sunqxf91.html"/>
      <url>/post/sunqxf91.html</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><h3 id="博客搭建导航-🌏"><a href="#博客搭建导航-🌏" class="headerlink" title="博客搭建导航 🌏"></a>博客搭建导航 🌏</h3><ol><li><a href="/post/6706d621.html" title="基于hexo搭建博客基础（一）">基于hexo搭建博客基础（一）</a></li><li><a href="/post/sunqxf91.html" title="基于hexo搭建博客基础（二）">基于hexo搭建博客基础（二）</a></li><li><a href="/post/r51bjcg8.html" title="基于hexo搭建博客基础（三）">基于hexo搭建博客基础（三）</a></li></ol></div><script src='/js/series.js'></script><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><ol><li>这个系列是关于如何基于hexo框架以及GitHub Pages搭建自己的博客网站。</li><li>❗创建本系列博客的初衷也只是为了记录一下自己的学习过程，以防之后健忘❗。</li><li>虽说如此，但是本系列博客已经写的很详细了，可能后面的内容会比较简略，就算是零基础也能懂大部分。</li><li>配置文件参数含义在<a href="https://hexo.io/zh-cn/docs/configuration">官方</a>处都有讲解，这里只讲述自己修改了的部分。</li></ol><h2 id="2-Site信息修改"><a href="#2-Site信息修改" class="headerlink" title="2.Site信息修改"></a>2.Site信息修改</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">AnA.</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">🥳🥳欢迎来到我的小站🥳🥳</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">一个讨论技术和作为个人知识库的小站</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">blog</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">AnA</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br></pre></td></tr></table></figure><p>language常用参数:</p><ul><li>en（英文）</li><li>zh-CN（中文简体（中国大陆））</li><li>zh-HK（中文繁体（中国香港））</li><li>zh-TW（中文繁体（中国台湾））</li></ul><h2 id="3-URL信息修改"><a href="#3-URL信息修改" class="headerlink" title="3.URL信息修改"></a>3.URL信息修改</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://ana-0823.github.io</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">post/:code/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>url：站内链接的前缀地址，将其改为自己站点的地址<br>permalink：站内文章的地址（:code是我自定义的参数，在post的markdown文档的<code>front-matter</code>中加上就好）</p><h2 id="4-标签页"><a href="#4-标签页" class="headerlink" title="4.标签页"></a>4.标签页</h2><ol><li>在博客根目录下打开终端输入以下命令：<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo new page tags</span><br></pre></td></tr></table></figure></li><li>会在博客根目录中的<code>\source\</code>生成一个含有<code>index.md</code>文件的<code>tags</code>文件夹。</li><li>修改<code>index.md</code>，添加<code>type: &quot;tags&quot;</code>。<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2024-05-02 03:31:43</span><br><span class="line"><span class="section">type: &quot;tags&quot;</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure></li><li>安装以上步骤生成<code>categories</code>还有<code>link</code>标签页。</li></ol><h2 id="5-友链"><a href="#5-友链" class="headerlink" title="5.友链"></a>5.友链</h2><p>在博客根目录下的<code>\source\_data</code>中创建一个link.yml文件，在这里按以下格式填写需要的链接：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="number">1</span><span class="string">.技术支持</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">本网站的搭建由以下开源作者提供技术支持</span></span><br><span class="line">  <span class="attr">link_list:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span> </span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://hexo.io/zh-cn/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">快速、简单且强大的网志框架</span></span><br><span class="line">      <span class="attr">siteshot:</span> </span><br></pre></td></tr></table></figure><h2 id="6-子页面"><a href="#6-子页面" class="headerlink" title="6.子页面"></a>6.子页面</h2><p>子页面就是普通的页面，通过<code>npx hexo page &lt;page name&gt;</code>创建就好<br>然后就可以在对应的<code>index.md</code>中编写页面内容</p><h2 id="7-关于markdown文档的front-matter"><a href="#7-关于markdown文档的front-matter" class="headerlink" title="7.关于markdown文档的front-matter"></a>7.关于markdown文档的front-matter</h2><p><code>front-matter</code>就是markdown文档最上方以<code>---</code>分割的区域，作为页面和文章<code>metadata</code></p><ul><li>page front-matter用于配置页面</li><li>post front-matter用于配置文章</li></ul><h3 id="page-front-matter"><a href="#page-front-matter" class="headerlink" title="page front-matter"></a>page front-matter</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标签、分类和友链页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块(默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>kates</td><td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true&#x2F;false)(默认为设置中highlight_shrink的配置)</td></tr></tbody></table><h3 id="post-front-matter"><a href="#post-front-matter" class="headerlink" title="post front-matter"></a>post front-matter</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">comments:</span></span><br><span class="line"><span class="emphasis">cover:</span></span><br><span class="line"><span class="emphasis">toc:</span></span><br><span class="line"><span class="emphasis">toc_</span>number:</span><br><span class="line">toc<span class="emphasis">_style_</span>simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright<span class="emphasis">_author:</span></span><br><span class="line"><span class="emphasis">copyright_</span>author<span class="emphasis">_href:</span></span><br><span class="line"><span class="emphasis">copyright_</span>url:</span><br><span class="line">copyright<span class="emphasis">_info:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line"><span class="section">aside:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>title</td><td>【必需】文章标题</td></tr><tr><td>date</td><td>【必需】文章创建日期</td></tr><tr><td>updated</td><td>【可选】文章更新日期</td></tr><tr><td>tags</td><td>【可选】文章标签</td></tr><tr><td>categories</td><td>【可选】文章分类</td></tr><tr><td>keywords</td><td>【可选】文章关键字</td></tr><tr><td>description</td><td>【可选】文章描述</td></tr><tr><td>top_img</td><td>【可选】文章顶部图片</td></tr><tr><td>cover</td><td>【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false&#x2F;图片地址&#x2F;留空)</td></tr><tr><td>comments</td><td>【可选】显示文章评论模块(默认 true)</td></tr><tr><td>toc</td><td>【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td>toc_number</td><td>【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td>toc_style_simple</td><td>【可选】显示 toc 简洁模式</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的文章作者</td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的文章作者链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的文章连结链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的版权声明文字</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true&#x2F;false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr></tbody></table><h2 id="8-安装主题"><a href="#8-安装主题" class="headerlink" title="8.安装主题"></a>8.安装主题</h2><p>推荐🦋hexo-theme-butterfly主题（当然也可以安装其他的主题），输入以下命令安装：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-theme-butterfly</span></span><br></pre></td></tr></table></figure><h2 id="9-应用主题"><a href="#9-应用主题" class="headerlink" title="9.应用主题"></a>9.应用主题</h2><ol><li>修改网站配置文件<code>_config.yml</code>，将主题更改为<code>butterfly</code><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure></li><li>安装<code>pug</code>和<code>stylus</code>渲染器，这两个渲染器都是<code>butterfly</code>生成页面的依赖包：<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-renderer-pug</span> hexo<span class="literal">-renderer-stylus</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure></li><li>为了后续修改方便，将butterfly的配置文件<code>_config.yml</code>复制到项目根目录底下，并改名为<code>_config.butterfly.yml</code>。</li></ol><h2 id="10-标签外挂"><a href="#10-标签外挂" class="headerlink" title="10.标签外挂"></a>10.标签外挂</h2><p>❗❗❗标签外挂是hexo特有的功能，并不是markdown的标准格式，以下的写法仅限于butterfly主题，将其应用于其他主题可能会导致报错❗❗❗</p><h3 id="10-1-note-Bootstrap-Callout"><a href="#10-1-note-Bootstrap-Callout" class="headerlink" title="10.1.note (Bootstrap Callout)"></a>10.1.note (Bootstrap Callout)</h3><p>详细介绍看<a href="https://butterfly.js.org/posts/4aa8abbe/#Note-Bootstrap-Callout">官方链接🛫</a><br>使用方法有两种，语法格式：</p><div class="tabs" id="tab1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="tab1-1">第一种</button><button type="button" class="tab " data-href="tab1-2">第二种</button></ul><div class="tab-contents"><div class="tab-item-content active" id="tab1-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;</span><br><span class="line">默认 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;</span><br><span class="line">default 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;</span><br><span class="line">primary 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;</span><br><span class="line">success 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;</span><br><span class="line">info 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;</span><br><span class="line">warning 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;</span><br><span class="line">danger 提示块标签</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div></div><div class="tab-item-content" id="tab1-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;</span><br><span class="line">小心开车 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;</span><br><span class="line">这是三片呢？还是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;</span><br><span class="line">你是刷 Visa 还是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;</span><br><span class="line">剪刀石头布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;</span><br><span class="line">前端最讨厌的浏览器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>当style缺省时启用配置文件中的设置</p><h3 id="10-2-Gallery相册图库"><a href="#10-2-Gallery相册图库" class="headerlink" title="10.2.Gallery相册图库"></a>10.2.Gallery相册图库</h3><p>详细介绍看<a href="https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A%E5%9C%96%E5%BA%AB">官方链接🛫</a><br>图库集合，语法格式：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>name：图库名字</li><li>description：图库描述</li><li>link：跳转链接</li><li>img-url：封面图片</li></ul><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup &#x27;图库&#x27; &#x27;个人喜欢的一些图片🥰🥰&#x27; &#x27;/gallery/&#x27; &#x27;/img/background.jpg&#x27; %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><div class="gallery-group-main"><figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img/background.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">图库</div>  <p>个人喜欢的一些图片🥰🥰</p>  <a href='/gallery/'></a>  </figcaption>  </figure>  </div><h3 id="10-3-Gallery相册"><a href="#10-3-Gallery相册" class="headerlink" title="10.3.Gallery相册"></a>10.3.Gallery相册</h3><p>详细介绍看<a href="https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A">官方链接🛫</a><br>图库，语法格式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery [lazyload],[rowHeight],[limit] %&#125;</span><br><span class="line">![](<span class="link">img-url</span>)</span><br><span class="line">...</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">/img/1.jpg</span>)</span><br><span class="line">![](<span class="link">/img/2.jpg</span>)</span><br><span class="line">![](<span class="link">/img/3.jpg</span>)</span><br><span class="line">![](<span class="link">/img/4.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><div class="gallery-container" data-type="data" data-button="">      <div class="gallery-data">[{"url":"/img/1.jpg","alt":""},{"url":"/img/2.jpg","alt":""},{"url":"/img/3.jpg","alt":""},{"url":"/img/4.jpg","alt":""}]</div>      <div class="gallery-items">      </div>    </div><h3 id="10-4-tag-hide"><a href="#10-4-tag-hide" class="headerlink" title="10.4.tag-hide"></a>10.4.tag-hide</h3><p>详细介绍看<a href="https://butterfly.js.org/posts/4aa8abbe/#tag-hide">官方链接🛫</a><br>这个标签可以隐藏一些内容🧐，有三种可选：</p><div class="tabs" id="tab2"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="tab2-1">Inline</button><button type="button" class="tab " data-href="tab2-2">Block</button><button type="button" class="tab " data-href="tab2-3">Toggle</button></ul><div class="tab-contents"><div class="tab-item-content active" id="tab2-1"><p>可以在文本中的按钮后隐藏一些东西，仅限文字</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideInline content,display,bg,color %&#125;</span><br></pre></td></tr></table></figure><ul><li>content: 文本内容</li><li>display: 按钮显示的文字（可选）</li><li>bg: 按钮的背景颜色（可选）</li><li>color: 按钮文字的颜色（可选）</li></ul><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">🤣👉&#123;% hideInline 🤡,你是谁？,#66CCCC,#fff %&#125;</span><br><span class="line">🤣👉&#123;% hideInline 🤡 %&#125;</span><br></pre></td></tr></table></figure><p>🤣👉<span class="hide-inline"><button type="button" class="hide-button" style="background-color: #66CCCC;color: #fff">你是谁？<br>  </button><span class="hide-content">🤡</span></span><br>🤣👉<span class="hide-inline"><button type="button" class="hide-button" style="">Click<br>  </button><span class="hide-content">🤡</span></span></p></div><div class="tab-item-content" id="tab2-2"><p>可以在一个独立的按钮后隐藏很多内容，包括图片，代码块等</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><ul><li>content: 文本内容</li><li>display: 按钮显示的文字（可选）</li><li>bg: 按钮的背景颜色（可选）</li><li>color: 按钮文字的颜色（可选）</li></ul><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 猜猜这里有什么？,#66CCCC,#fff %&#125;</span><br><span class="line">啥也没有🤣👉🤡</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br><span class="line">&#123;% hideBlock 你在再猜猜这里有什么？,#66CCCC,#fff %&#125;</span><br><span class="line">🤪还是啥也没有🤣👉🤡</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br><span class="line">&#123;% hideBlock 这里真的有东西的😲,#66CCCC,#fff %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding: 30% 45%;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=80433022&amp;bvid=BV1GJ411x7h7&amp;cid=137649199&amp;p=1&amp;danmaku=0&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><div class="hide-block"><button type="button" class="hide-button" style="background-color: #66CCCC;color: #fff">猜猜这里有什么？    </button><div class="hide-content"><p>啥也没有🤣👉🤡</p></div></div><div class="hide-block"><button type="button" class="hide-button" style="background-color: #66CCCC;color: #fff">你在再猜猜这里有什么？    </button><div class="hide-content"><p>🤪还是啥也没有🤣👉🤡</p></div></div><div class="hide-block"><button type="button" class="hide-button" style="background-color: #66CCCC;color: #fff">这里真的有东西的😲    </button><div class="hide-content"><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=80433022&bvid=BV1GJ411x7h7&cid=137649199&p=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div></div></div></div><div class="tab-item-content" id="tab2-3"><p>折叠的收缩栏</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><ul><li>content: 文本内容</li><li>display: 按钮显示的文字（可选）</li><li>bg: 按钮的背景颜色（可选）</li><li>color: 按钮文字的颜色（可选）</li></ul><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideToggle 还要再来一次吗😲,#1f1f1f,#fff %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; padding: 30% 45%;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">style</span>=<span class="string">&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=80433022&amp;bvid=BV1GJ411x7h7&amp;cid=137649199&amp;p=1&amp;danmaku=0&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&#123;% endhideToggle %&#125;</span><br></pre></td></tr></table></figure><details class="toggle" style="border: 1px solid #1f1f1f"><summary class="toggle-button" style="background-color: #1f1f1f;color: #fff">还要再来一次吗😲</summary><div class="toggle-content"><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=80433022&bvid=BV1GJ411x7h7&cid=137649199&p=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div></div></details></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="10-5-mermaid"><a href="#10-5-mermaid" class="headerlink" title="10.5.mermaid"></a>10.5.mermaid</h3><p>使用mermaid标签可以绘制Flowchart（流程图）、Sequence diagram（时序图 ）、Class Diagram（类别图）、State Diagram（状态图）、Gantt（甘特图）和Pie Chart（圆形图），具体可以查看<a href="https://mermaid.js.org/">mermaid文档🛫</a>以及<a href="https://butterfly.js.org/posts/4aa8abbe/#mermaid">butterfly官方🛫</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">pie</span><br><span class="line"><span class="code">    title 一个样例图</span></span><br><span class="line"><span class="code">    &quot;一部分&quot; : 33</span></span><br><span class="line"><span class="code">    &quot;二部分&quot; : 17</span></span><br><span class="line"><span class="code">    &quot;三部分&quot; : 45</span></span><br><span class="line"><span class="code">    &quot;四部分&quot; :  5</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  pie    title 一个样例图    &quot;一部分&quot; : 33    &quot;二部分&quot; : 17    &quot;三部分&quot; : 45    &quot;四部分&quot; :  5  </pre></div><h3 id="10-6-tabs"><a href="#10-6-tabs" class="headerlink" title="10.6.tabs"></a>10.6.tabs</h3><p>详细介绍看<a href="https://butterfly.js.org/posts/4aa8abbe/#Tabs">官方链接🛫</a><br>页面中的分栏</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs %&#125;</span><br><span class="line">&lt;!-- tab tab1 --&gt;</span><br><span class="line">😎</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab tab2 --&gt;</span><br><span class="line">😍</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab tab3 --&gt;</span><br><span class="line">🤩</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tabs" id="tab3"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="tab3-1">tab1</button><button type="button" class="tab " data-href="tab3-2">tab2</button><button type="button" class="tab " data-href="tab3-3">tab3</button></ul><div class="tab-contents"><div class="tab-item-content active" id="tab3-1"><p>😎</p></div><div class="tab-item-content" id="tab3-2"><p>😍</p></div><div class="tab-item-content" id="tab3-3"><p>🤩</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="10-7-button"><a href="#10-7-button" class="headerlink" title="10.7.button"></a>10.7.button</h3><p>详细介绍看<a href="https://butterfly.js.org/posts/4aa8abbe/#Button">官方链接🛫</a><br>按钮</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn [url],[text],[icon],[color] [style] [layout] [position] [size] %&#125;</span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn &#x27;https://ana-0823.github.io/&#x27;,回到主页,fas fa-home,block %&#125;</span><br><span class="line">&#123;% btn &#x27;https://www.bilibili.com/video/BV1GJ411x7h7/?share<span class="emphasis">_source=copy_</span>web&amp;vd<span class="emphasis">_source=5ebc5a2a2473be67c2088121daedad91/&#x27;,😲,,block %&#125;</span></span><br></pre></td></tr></table></figure><a class="btn-beautify block" href="https://ana-0823.github.io/"   title="回到主页"><i class="fas fa-home"></i><span>回到主页</span></a><a class="btn-beautify block" href="https://www.bilibili.com/video/BV1GJ411x7h7/?share_source=copy_web&vd_source=5ebc5a2a2473be67c2088121daedad91/"   title="😲"><span>😲</span></a><h3 id="10-8-inlineImg"><a href="#10-8-inlineImg" class="headerlink" title="10.8.inlineImg"></a>10.8.inlineImg</h3><p>详细介绍看<a href="https://butterfly.js.org/posts/4aa8abbe/#inlineImg">官方链接🛫</a><br>以<code>内联元素</code>显示的图片，使用此标签</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineImg [src] [height] %&#125;</span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">🤣👉&#123;% inlineImg /img/jocker.gif 100px %&#125;</span><br></pre></td></tr></table></figure><p>🤣👉<img class="inline-img" src="/img/jocker.gif" style="height:100px" /></p><h3 id="10-9-label"><a href="#10-9-label" class="headerlink" title="10.9.label"></a>10.9.label</h3><p>详细介绍看<a href="https://butterfly.js.org/posts/4aa8abbe/#label">官方链接🛫</a><br>高亮标签</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% label text color %&#125;</span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个&#123;% label 高亮 red %&#125;，这是另一个&#123;% label 高亮 pink %&#125;</span><br></pre></td></tr></table></figure><p>这是一个<mark class="hl-label red">高亮</mark> ，这是另一个<mark class="hl-label pink">高亮</mark> </p><h3 id="10-10-timeline"><a href="#10-10-timeline" class="headerlink" title="10.10.timeline"></a>10.10.timeline</h3><p>详细介绍看<a href="https://butterfly.js.org/posts/4aa8abbe/#timeline">官方链接🛫</a><br>时间线</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline title,color %&#125;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">content</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline title --&gt;</span><br><span class="line">content</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 2024 %&#125;</span><br><span class="line">&lt;!-- timeline 05-01 --&gt;</span><br><span class="line">test</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 05-02 --&gt;</span><br><span class="line">test2</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><div class="timeline undefined"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2024</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-01</p></div></div><div class='timeline-item-content'><p>test1</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>05-02</p></div></div><div class='timeline-item-content'><p>test2</p></div></div></div><h3 id="10-11-flink"><a href="#10-11-flink" class="headerlink" title="10.11.flink"></a>10.11.flink</h3><p>详细介绍看<a href="https://butterfly.js.org/posts/4aa8abbe/#flink">官方链接🛫</a><br>添加友链</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% flink %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endflink %&#125;</span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% flink %&#125;</span><br><span class="line"><span class="bullet">-</span> class<span class="emphasis">_name: 技术支持</span></span><br><span class="line"><span class="emphasis">  class_</span>desc: 本网站的搭建由以下开源作者提供技术支持</span><br><span class="line">  link<span class="emphasis">_list: </span></span><br><span class="line"><span class="emphasis">    - name: Hexo </span></span><br><span class="line"><span class="emphasis">      link: https://hexo.io/zh-cn/</span></span><br><span class="line"><span class="emphasis">      avatar: https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span class="line"><span class="emphasis">      descr: 快速、简单且强大的网志框架</span></span><br><span class="line"><span class="emphasis">      siteshot:</span></span><br><span class="line"><span class="emphasis">    - name: butterfly</span></span><br><span class="line"><span class="emphasis">      link: https://butterfly.js.org/</span></span><br><span class="line"><span class="emphasis">      avatar: https://butterfly.js.org/img/avatar.png</span></span><br><span class="line"><span class="emphasis">      descr: butterfly美化主题🦋</span></span><br><span class="line"><span class="emphasis">      siteshot: </span></span><br><span class="line"><span class="emphasis">&#123;% endflink %&#125;</span></span><br></pre></td></tr></table></figure><div class="flink"><div class="flink-name">技术支持</div><div class="flink-desc">本网站的搭建由以下开源作者提供技术支持</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://hexo.io/zh-cn/" title="Hexo" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Hexo" />              </div>              <div class="flink-item-name">Hexo</div>               <div class="flink-item-desc" title="快速、简单且强大的网志框架">快速、简单且强大的网志框架</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://butterfly.js.org/" title="butterfly" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://butterfly.js.org/img/avatar.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="butterfly" />              </div>              <div class="flink-item-name">butterfly</div>               <div class="flink-item-desc" title="butterfly美化主题🦋">butterfly美化主题🦋</div>            </a>          </div></div></div><h3 id="10-12-abcjs乐谱"><a href="#10-12-abcjs乐谱" class="headerlink" title="10.12.abcjs乐谱"></a>10.12.abcjs乐谱</h3><p>详细介绍看<a href="https://butterfly.js.org/posts/4aa8abbe/?highlight=abc#abcjs-%E6%A8%82%E8%AD%9C">官方链接🛫</a><br>在页面上渲染乐谱<br>在主题配置中设置如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">abcjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>格式：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% score %&#125;</span><br><span class="line">乐谱代码</span><br><span class="line">&#123;% endscore %&#125;</span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% score %&#125;</span><br><span class="line">X:1</span><br><span class="line">T:alternate heads</span><br><span class="line">M:C</span><br><span class="line">L:1/8</span><br><span class="line">U:n=!style=normal!</span><br><span class="line">K:C treble style=rhythm</span><br><span class="line">&quot;Am&quot; BBBB B2 B&gt;B | &quot;Dm&quot; B2 B/B/B &quot;C&quot; B4 |&quot;Am&quot; B2 nGnB B2 nGnA | &quot;Dm&quot; nDB/B/ nDB/B/ &quot;C&quot; nCB/B/ nCB/B/ |B8| B0 B0 B0 B0 |]</span><br><span class="line">%%text This translates to:</span><br><span class="line">[<span class="string">M:C</span>][<span class="symbol">K:style=normal</span>]</span><br><span class="line">[<span class="string">A,EAce</span>][<span class="symbol">A,EAce</span>][<span class="string">A,EAce</span>][<span class="symbol">A,EAce</span>] [A,EAce]2 [A,EAce]&gt;[A,EAce] |[DAdf]2 [DAdf]/[DAdf]/[DAdf] [CEGce]4 |[A,EAce]2 GA [A,EAce] GA |D[DAdf]/[DAdf]/ D[DAdf]/[DAdf]/ C [CEGce]/[CEGce]/ C[CEGce]/[CEGce]/ |[CEGce]8 | [CEGce]2 [CEGce]2 [CEGce]2 [CEGce]2 |]</span><br><span class="line">GAB2 !style=harmonic![gb]4|GAB2 [K: style=harmonic]gbgb|</span><br><span class="line">[K: style=x]</span><br><span class="line">C/A,/ C/C/E C/zz2|</span><br><span class="line">w:Rock-y did-nt like that</span><br><span class="line">&#123;% endscore %&#125;</span><br></pre></td></tr></table></figure><div class="abc-music-sheet">X:1T:alternate headsM:CL:1/8U:n=!style=normal!K:C treble style=rhythm&quot;Am&quot; BBBB B2 B&gt;B | &quot;Dm&quot; B2 B/B/B &quot;C&quot; B4 |&quot;Am&quot; B2 nGnB B2 nGnA | &quot;Dm&quot; nDB/B/ nDB/B/ &quot;C&quot; nCB/B/ nCB/B/ |B8| B0 B0 B0 B0 |]%%text This translates to:[M:C][K:style=normal][A,EAce][A,EAce][A,EAce][A,EAce] [A,EAce]2 [A,EAce]&gt;[A,EAce] |[DAdf]2 [DAdf]/[DAdf]/[DAdf] [CEGce]4 |[A,EAce]2 GA [A,EAce] GA |D[DAdf]/[DAdf]/ D[DAdf]/[DAdf]/ C [CEGce]/[CEGce]/ C[CEGce]/[CEGce]/ |[CEGce]8 | [CEGce]2 [CEGce]2 [CEGce]2 [CEGce]2 |]GAB2 !style=harmonic![gb]4|GAB2 [K: style=harmonic]gbgb|[K: style=x]C/A,/ C/C/E C/zz2|w:Rock-y did-nt like that</div><h3 id="10-13-series系列文章"><a href="#10-13-series系列文章" class="headerlink" title="10.13.series系列文章"></a>10.13.series系列文章</h3><p>详细介绍看<a href="https://butterfly.js.org/posts/4aa8abbe/?highlight=abc#series-%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0">官方链接🛫</a><br>在页面上显示系列文章<br>修改主题配置文件如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">series:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">orderBy:</span> <span class="string">&#x27;date&#x27;</span></span><br><span class="line">  <span class="attr">order:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>写法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% series %&#125;</span><br><span class="line">&#123;% series [series name] %&#125;</span><br></pre></td></tr></table></figure><p>要在文章的<code>front-matter</code>上添加参数series，给一个标识</p><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% series hexo %&#125;</span><br></pre></td></tr></table></figure><ol><li><a href="/post/6706d621.html" title="基于hexo搭建博客基础（一）">基于hexo搭建博客基础（一）</a></li><li><a href="/post/sunqxf91.html" title="基于hexo搭建博客基础（二）">基于hexo搭建博客基础（二）</a></li><li><a href="/post/r51bjcg8.html" title="基于hexo搭建博客基础（三）">基于hexo搭建博客基础（三）</a></li></ol><h3 id="10-14-aplayer播放器"><a href="#10-14-aplayer播放器" class="headerlink" title="10.14.aplayer播放器"></a>10.14.aplayer播放器</h3><p>详细介绍看<a href="https://github.com/MoePlayer/hexo-tag-aplayer">官方文档</a><br>通过命令<code>npm install --save hexo-tag-aplayer</code>安装插件<br>要在配置文件中修改如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>主题配置中修改如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>per_page为false时须在要使用的页面的<code>front-matter</code>中添加aplayer参数<br>为了使切换页面时音乐不中断，要打开pjax</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br></pre></td></tr></table></figure><p>写法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting id server type %&#125;</span><br></pre></td></tr></table></figure><p>样例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;9992949674&quot; &quot;netease&quot; &quot;playlist&quot;%&#125;</span><br></pre></td></tr></table></figure>    <div id="aplayer-gEsSVWwb" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="9992949674" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p><a href="https://ana-0823.github.io/post/r51bjcg8.html"><strong>至此站点的配置和butterfly主题就应用到博客上了，下一章将自定义butterfly主题成自己喜欢的样子🛫</strong></a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于hexo搭建博客基础（一）</title>
      <link href="/post/6706d621.html"/>
      <url>/post/6706d621.html</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon flat"><h3 id="博客搭建导航-🌏"><a href="#博客搭建导航-🌏" class="headerlink" title="博客搭建导航 🌏"></a>博客搭建导航 🌏</h3><ol><li><a href="/post/6706d621.html" title="基于hexo搭建博客基础（一）">基于hexo搭建博客基础（一）</a></li><li><a href="/post/sunqxf91.html" title="基于hexo搭建博客基础（二）">基于hexo搭建博客基础（二）</a></li><li><a href="/post/r51bjcg8.html" title="基于hexo搭建博客基础（三）">基于hexo搭建博客基础（三）</a></li></ol></div><script src='/js/series.js'></script><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h2><ol><li>这个系列是关于如何基于 hexo 框架以及 GitHub Pages 搭建自己的博客网站。</li><li>❗ 创建本系列博客的初衷也只是为了记录一下自己的学习过程，以防之后健忘 ❗。</li><li>虽说如此，但是本系列博客已经写的很详细了，可能后面的内容会比较简略，就算是零基础也能懂大部分。</li></ol><h2 id="2-环境与工具准备"><a href="#2-环境与工具准备" class="headerlink" title="2.环境与工具准备"></a>2.环境与工具准备</h2><p>本系列是面向 Windows 用户的，所需工具：</p><ul><li>操作系统：Windows11</li><li>Node.js</li><li>Git</li><li>Hexo</li><li>GitHub 账号</li><li>文本编辑器（随便一个都行，甚至 word 文档也可以 🤣，不过还是推荐 VSCode）</li></ul><h2 id="3-Node-js-的安装"><a href="#3-Node-js-的安装" class="headerlink" title="3.Node.js 的安装"></a>3.Node.js 的安装</h2><ol><li>下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></li><li>安装。</li><li>打开终端，输入<code>node -v</code>来查看 node.js 的版本，看到版本号则为安装成功。</li><li>修改 npm 源，看情况，有梯子就不用了，要修改就按照输入以下命令：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry &lt;替换的npm源&gt;</span><br></pre></td></tr></table></figure><h2 id="4-安装-Hexo"><a href="#4-安装-Hexo" class="headerlink" title="4.安装 Hexo"></a>4.安装 Hexo</h2><ol><li>输入以下命令：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">-g</span> hexo<span class="literal">-cli</span></span><br></pre></td></tr></table></figure><ol start="2"><li>以上命令为全局安装（全局安装路径为：C:\Users\Administrator\AppData\Roaming\npm，输入<code>npm config get prefix</code>查看），安装的包将会放到此路径底下的 node_modules 里，如果不想全局的话，就在指定路径底下打开终端，输入以下命令：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-cli</span></span><br></pre></td></tr></table></figure><ol start="3"><li>输入<code>npx hexo -v</code>查看 hexo 版本（不是全局安装的话要将终端切换到指定路径），看到版本号就是安装成功了。</li></ol><h2 id="5-GitHub-创建仓库"><a href="#5-GitHub-创建仓库" class="headerlink" title="5.GitHub 创建仓库"></a>5.GitHub 创建仓库</h2><p>创建一个名为&lt;GitHub 用户名&gt;.github.io 的仓库<br><strong>❗❗❗ 仓库名的格式必须为&lt;GitHub 用户名&gt;.github.io，否则后面会出现 bug 还有 404❗❗❗</strong></p><h2 id="6-Git-安装"><a href="#6-Git-安装" class="headerlink" title="6.Git 安装"></a>6.Git 安装</h2><ol><li>下载地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></li><li>安装</li><li>配置用户名和邮箱</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config <span class="literal">--global</span> user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line">git config <span class="literal">--global</span> user.email <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure><h2 id="7-连接-GitHub"><a href="#7-连接-GitHub" class="headerlink" title="7.连接 GitHub"></a>7.连接 GitHub</h2><p>两种都可以</p><h3 id="使用-ssh-连接"><a href="#使用-ssh-连接" class="headerlink" title="使用 ssh 连接"></a>使用 ssh 连接</h3><ol><li>生成 ssh 密钥对,生成的公钥和密钥在 C:\Users\Administrator.shh 里，输入以下命令：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh<span class="literal">-keygen</span> <span class="literal">-t</span> rsa <span class="literal">-C</span> <span class="string">&quot;邮箱&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>输入以下命令查看 ssh 公钥</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> .ssh\id_rsa.pub</span><br></pre></td></tr></table></figure><ol start="3"><li>将公钥复制到 GitHub 账号里。</li></ol><h3 id="使用-https-连接"><a href="#使用-https-连接" class="headerlink" title="使用 https 连接"></a>使用 https 连接</h3><p>直接用就好了</p><h2 id="8-初始化-Hexo-项目"><a href="#8-初始化-Hexo-项目" class="headerlink" title="8.初始化 Hexo 项目"></a>8.初始化 Hexo 项目</h2><ol><li>在目标路径打开终端（不是全局安装的就在装了 hexo 的那个路径里初始化），输入以下命令：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo init &lt;项目名&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li><code>cd</code>进入项目中，输入<code>npx hexo s</code>，输入后会在本地的 4000 端口启动项目。</li><li>在浏览器输入<a href="http://localhost:4000/">http://localhost:4000/</a>，可以看到一份 HelloWorld 文档，证明博客已经搭建好了。</li></ol><h2 id="9-将静态的博客网站挂载到-GitHub-Pages-上"><a href="#9-将静态的博客网站挂载到-GitHub-Pages-上" class="headerlink" title="9.将静态的博客网站挂载到 GitHub Pages 上"></a>9.将静态的博客网站挂载到 GitHub Pages 上</h2><ol><li>安装 hexo-deployer-git</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-deployer-git</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure><ol start="2"><li>修改_config.yml 文件，这个文件为网站的配置文件，可以打开<a href="https://hexo.io/zh-cn/docs/configuration">官方的教程</a>，修改 deploy 配置：</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&quot;git&quot;</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">&lt;仓库地址&gt;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><ol start="3"><li>改好后，输入以下命令将博客部署到 GitHub 上：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npx hexo clean; npx hexo generate; npx hexo deploy</span><br><span class="line">// 可以简写为 npx hexo cl; npx hexo g; npx hexo d</span><br></pre></td></tr></table></figure><ul><li><code>npx hexo clean</code>：删除之前生成的静态文件。</li><li><code>npx hexo generate</code>：生成静态文件。</li><li><code>npx hexo deploy</code>：将静态文件部署到 GitHub 上。</li></ul><p><a href="https://ana-0823.github.io/post/sunqxf91.html"><strong>至此博客搭建成功，下一章将修改站点配置并安装主题到博客中 🛫</strong></a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/corner-indicator.css"/>
      <url>/css/corner-indicator.css</url>
      
        <content type="html"><![CDATA[:root{--pace-color: #49B1F5;}[data-theme='dark'] {--pace-color: #292929;}.pace {-webkit-pointer-events: none;pointer-events: none;-webkit-user-select: none;-moz-user-select: none;user-select: none;}.pace .pace-activity {display: block;position: fixed;z-index: 2000;top: 0;right: 0;width: 300px;height: 300px;background: var(--pace-color);-webkit-transition: -webkit-transform 0.3s;transition: transform 0.3s;-webkit-transform: translateX(100%) translateY(-100%) rotate(45deg);transform: translateX(100%) translateY(-100%) rotate(45deg);pointer-events: none;}.pace.pace-active .pace-activity {-webkit-transform: translateX(50%) translateY(-50%) rotate(45deg);transform: translateX(50%) translateY(-50%) rotate(45deg);}.pace .pace-activity::before,.pace .pace-activity::after {-moz-box-sizing: border-box;box-sizing: border-box;position: absolute;bottom: 30px;left: 50%;display: block;border: 5px solid #fff;border-radius: 50%;content: '';}.pace .pace-activity::before {margin-left: -40px;width: 80px;height: 80px;border-right-color: rgba(0, 0, 0, .2);border-left-color: rgba(0, 0, 0, .2);-webkit-animation: pace-theme-corner-indicator-spin 3s linear infinite;animation: pace-theme-corner-indicator-spin 3s linear infinite;}.pace .pace-activity::after {bottom: 50px;margin-left: -20px;width: 40px;height: 40px;border-top-color: rgba(0, 0, 0, .2);border-bottom-color: rgba(0, 0, 0, .2);-webkit-animation: pace-theme-corner-indicator-spin 1s linear infinite;animation: pace-theme-corner-indicator-spin 1s linear infinite;}@-webkit-keyframes pace-theme-corner-indicator-spin {0% { -webkit-transform: rotate(0deg); }100% { -webkit-transform: rotate(359deg); }}@keyframes pace-theme-corner-indicator-spin {0% { transform: rotate(0deg); }100% { transform: rotate(359deg); }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/series.js"/>
      <url>/js/series.js</url>
      
        <content type="html"><![CDATA[// 为系列文章的标签添加美化效果// 11个美化图标var icons = ["🍉", "🥭", "🍇", "🍈", "🍊", "🍍", "🍓", "🥝", "🥥", "🫐", "🍒"];var list = document  .querySelector(".note, .info, .no-icon, .flat")  .querySelectorAll("li");for (let i = 0; i < list.length; i++) {  const item = list[i];  const anchor = item.querySelector("a");  // 添加美化图标  anchor.textContent = icons[i] + anchor.textContent;  // 添加当前位置  if (anchor.href == window.location.href) {    item.innerHTML = item.innerHTML + " ⬅当前位置🛬";  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>图库</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="几张喜欢的图片🥰🥰"><a href="#几张喜欢的图片🥰🥰" class="headerlink" title="几张喜欢的图片🥰🥰"></a>几张喜欢的图片🥰🥰</h2><div class="gallery-container" data-type="data" data-button="">      <div class="gallery-data">[{"url":"/img/1.jpg","alt":""},{"url":"/img/2.jpg","alt":""},{"url":"/img/3.jpg","alt":""},{"url":"/img/4.jpg","alt":""},{"url":"/img/5.jpg","alt":""},{"url":"/img/6.jpg","alt":""},{"url":"/img/7.jpg","alt":""},{"url":"/img/8.jpg","alt":""},{"url":"/img/9.jpg","alt":""},{"url":"/img/10.jpg","alt":""},{"url":"/img/11.jpg","alt":""},{"url":"/img/12.jpg","alt":""},{"url":"/img/13.jpg","alt":""},{"url":"/img/14.jpg","alt":""},{"url":"/img/15.jpg","alt":""},{"url":"/img/16.jpg","alt":""},{"url":"/img/17.jpg","alt":""},{"url":"/img/18.jpg","alt":""},{"url":"/img/19.jpg","alt":""},{"url":"/img/20.jpg","alt":""},{"url":"/img/21.jpg","alt":""}]</div>      <div class="gallery-items">      </div>    </div><div class="note warning flat"><p>如有侵权，请联系我删除</p></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="我喜欢的几首歌🥰🥰（可惜这里不能放要vip的😫）"><a href="#我喜欢的几首歌🥰🥰（可惜这里不能放要vip的😫）" class="headerlink" title="我喜欢的几首歌🥰🥰（可惜这里不能放要vip的😫）"></a>我喜欢的几首歌🥰🥰（可惜这里不能放要vip的😫）</h2>    <div id="aplayer-jyfarYnw" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="9992949674" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>视频</title>
      <link href="/movie/index.html"/>
      <url>/movie/index.html</url>
      
        <content type="html"><![CDATA[<p>这里啥也没有🤣👉🤡</p><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="//player.bilibili.com/player.html?aid=80433022&bvid=BV1GJ411x7h7&cid=137649199&p=1&danmaku=0" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
